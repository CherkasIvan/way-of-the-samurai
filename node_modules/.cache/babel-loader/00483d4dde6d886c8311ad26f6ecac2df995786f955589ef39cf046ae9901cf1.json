{"ast":null,"code":"import { stopSubmit } from 'redux-form';\nimport { authApi } from '../../api/api';\nimport { SetUserDataAC } from '../actions/actions';\nexport const getMeTC = () => {\n  return dispatch => {\n    authApi.getMe().then(response => {\n      if (response.data.resultCode === 0) {\n        const {\n          id,\n          login,\n          email\n        } = response.data.data;\n        dispatch(SetUserDataAC(id, email, login, true));\n      }\n    });\n  };\n};\nexport const loginTC = (email, password, rememberMe) => {\n  return dispatch => {\n    authApi.login({\n      email,\n      password,\n      rememberMe\n    }).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(getMeTC());\n      } else {\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n        dispatch(stopSubmit('login', {\n          _error: message\n        }));\n      }\n    });\n  };\n};\nexport const logoutTC = () => {\n  return dispatch => {\n    authApi.logout().then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(SetUserDataAC(null, null, null, false));\n      }\n    });\n  };\n};","map":{"version":3,"names":["stopSubmit","authApi","SetUserDataAC","getMeTC","dispatch","getMe","then","response","data","resultCode","id","login","email","loginTC","password","rememberMe","message","messages","length","_error","logoutTC","logout"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/redux/thunk/auth-thunk.ts"],"sourcesContent":["import { stopSubmit } from 'redux-form';\nimport { authApi } from '../../api/api';\nimport { SetUserDataAC } from '../actions/actions';\n\nexport const getMeTC = () => {\n  return (dispatch: any) => {\n    authApi.getMe().then((response) => {\n      if (response.data.resultCode === 0) {\n        const { id, login, email } = response.data.data;\n        dispatch(SetUserDataAC(id, email, login, true));\n      }\n    });\n  };\n};\n\nexport const loginTC = (\n  email: string,\n  password: string,\n  rememberMe: boolean\n) => {\n  return (dispatch: any) => {\n    authApi.login({ email, password, rememberMe }).then((response) => {\n      if (response.data.resultCode === 0) {\n        dispatch(getMeTC());\n      } else {\n        const message =\n          response.data.messages.length > 0\n            ? response.data.messages[0]\n            : 'Some error';\n        dispatch(stopSubmit('login', { _error: message }));\n      }\n    });\n  };\n};\n\nexport const logoutTC = () => {\n  return (dispatch: any) => {\n    authApi.logout().then((response) => {\n      if (response.data.resultCode === 0) {\n        dispatch(SetUserDataAC(null, null, null, false));\n      }\n    });\n  };\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,YAAY;AACvC,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,aAAa,QAAQ,oBAAoB;AAElD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAC3B,OAAQC,QAAa,IAAK;IACxBH,OAAO,CAACI,KAAK,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACjC,IAAIA,QAAQ,CAACC,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QAClC,MAAM;UAAEC,EAAE;UAAEC,KAAK;UAAEC;QAAM,CAAC,GAAGL,QAAQ,CAACC,IAAI,CAACA,IAAI;QAC/CJ,QAAQ,CAACF,aAAa,CAACQ,EAAE,EAAEE,KAAK,EAAED,KAAK,EAAE,IAAI,CAAC,CAAC;MACjD;IACF,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,OAAO,MAAME,OAAO,GAAGA,CACrBD,KAAa,EACbE,QAAgB,EAChBC,UAAmB,KAChB;EACH,OAAQX,QAAa,IAAK;IACxBH,OAAO,CAACU,KAAK,CAAC;MAAEC,KAAK;MAAEE,QAAQ;MAAEC;IAAW,CAAC,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAK;MAChE,IAAIA,QAAQ,CAACC,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QAClCL,QAAQ,CAACD,OAAO,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACL,MAAMa,OAAO,GACXT,QAAQ,CAACC,IAAI,CAACS,QAAQ,CAACC,MAAM,GAAG,CAAC,GAC7BX,QAAQ,CAACC,IAAI,CAACS,QAAQ,CAAC,CAAC,CAAC,GACzB,YAAY;QAClBb,QAAQ,CAACJ,UAAU,CAAC,OAAO,EAAE;UAAEmB,MAAM,EAAEH;QAAQ,CAAC,CAAC,CAAC;MACpD;IACF,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAQhB,QAAa,IAAK;IACxBH,OAAO,CAACoB,MAAM,CAAC,CAAC,CAACf,IAAI,CAAEC,QAAQ,IAAK;MAClC,IAAIA,QAAQ,CAACC,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QAClCL,QAAQ,CAACF,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;MAClD;IACF,CAAC,CAAC;EACJ,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}