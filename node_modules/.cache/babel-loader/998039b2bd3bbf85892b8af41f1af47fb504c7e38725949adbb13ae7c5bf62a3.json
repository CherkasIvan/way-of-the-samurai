{"ast":null,"code":"var _jsxFileName = \"/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/components/main-content/components/layout/pages/users/UsersContainer.tsx\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport Users from './Users';\nimport { SetUsersAC, SetCurrentPageAC } from '../../../../../../redux/actions/actions';\nimport { getUsersTC, subscribeUsersTC, unsubscribeUsersTC } from '../../../../../../redux/thunk/users-thunk';\nimport { withAuthRedirect } from '../../../../../shared/redirect/RedirectComponents';\nimport { compose } from '@reduxjs/toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    const users = '/users';\n    const page = `?page=${this.props.currentPage}`;\n    const pageSize = `&count=${this.props.pageSize}`;\n    this.props.getUsersTC(users, page, pageSize);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Users, {\n      ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\nexport default compose(connect(mapStateToProps, {\n  setUsers: SetUsersAC,\n  changePage: SetCurrentPageAC,\n  getUsersTC: getUsersTC,\n  subscribeUsersTC: subscribeUsersTC,\n  unsubscribeUsersTC: unsubscribeUsersTC\n}), withAuthRedirect)(UsersContainer);","map":{"version":3,"names":["connect","React","Users","SetUsersAC","SetCurrentPageAC","getUsersTC","subscribeUsersTC","unsubscribeUsersTC","withAuthRedirect","compose","jsxDEV","_jsxDEV","UsersContainer","Component","componentDidMount","users","page","props","currentPage","pageSize","render","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","state","usersPage","totalUsersCount","isFetching","followingInProgress","setUsers","changePage"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/components/main-content/components/layout/pages/users/UsersContainer.tsx"],"sourcesContent":["import { connect } from 'react-redux'\nimport { IState } from '../../../../models/state.interface'\nimport { IUser } from '../../../../models/user.interface'\nimport React from 'react'\nimport Users from './Users'\nimport { SetUsersAC, SetCurrentPageAC } from '../../../../../../redux/actions/actions'\nimport {\n  getUsersTC,\n  subscribeUsersTC,\n  unsubscribeUsersTC,\n} from '../../../../../../redux/thunk/users-thunk'\nimport { withAuthRedirect } from '../../../../../shared/redirect/RedirectComponents'\nimport { compose } from '@reduxjs/toolkit'\nimport { getProfileTC } from '../../../../../../redux/thunk/profile-thunk'\nimport { WithRouter } from '../../../../../shared/withRouter/WithRouter'\nimport ProfileClassContainer from '../profile/ProfileClassContainer'\n\ninterface IUsersContainerProps {\n  users: IUser[]\n  pageSize: number\n  totalUsersCount: number\n  isAuth: boolean\n  currentPage: number\n  isFetching: boolean\n  followingInProgress: number[]\n  setUsers: (users: IUser[]) => void\n  changePage: (pageNumber: number) => void\n  getUsersTC: (users: string, page: string, pageSize: string) => any\n  subscribeUsersTC: (userId: number) => any\n  unsubscribeUsersTC: (userId: number) => any\n}\n\nclass UsersContainer extends React.Component<IUsersContainerProps> {\n  componentDidMount(): void {\n    const users = '/users'\n    const page = `?page=${this.props.currentPage}`\n    const pageSize = `&count=${this.props.pageSize}`\n    this.props.getUsersTC(users, page, pageSize)\n  }\n\n  render(): React.ReactNode {\n    return <Users {...this.props} />\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress,\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUsers: SetUsersAC,\n    changePage: SetCurrentPageAC,\n    getUsersTC: getUsersTC,\n    subscribeUsersTC: subscribeUsersTC,\n    unsubscribeUsersTC: unsubscribeUsersTC,\n  }),\n  withAuthRedirect,\n)(UsersContainer)\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AAGrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,yCAAyC;AACtF,SACEC,UAAU,EACVC,gBAAgB,EAChBC,kBAAkB,QACb,2CAA2C;AAClD,SAASC,gBAAgB,QAAQ,mDAAmD;AACpF,SAASC,OAAO,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAoB1C,MAAMC,cAAc,SAASX,KAAK,CAACY,SAAS,CAAuB;EACjEC,iBAAiBA,CAAA,EAAS;IACxB,MAAMC,KAAK,GAAG,QAAQ;IACtB,MAAMC,IAAI,GAAI,SAAQ,IAAI,CAACC,KAAK,CAACC,WAAY,EAAC;IAC9C,MAAMC,QAAQ,GAAI,UAAS,IAAI,CAACF,KAAK,CAACE,QAAS,EAAC;IAChD,IAAI,CAACF,KAAK,CAACZ,UAAU,CAACU,KAAK,EAAEC,IAAI,EAAEG,QAAQ,CAAC;EAC9C;EAEAC,MAAMA,CAAA,EAAoB;IACxB,oBAAOT,OAAA,CAACT,KAAK;MAAA,GAAK,IAAI,CAACe;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;AACF;AAEA,MAAMC,eAAe,GAAIC,KAAa,IAAK;EACzC,OAAO;IACLX,KAAK,EAAEW,KAAK,CAACC,SAAS,CAACZ,KAAK;IAC5BI,QAAQ,EAAEO,KAAK,CAACC,SAAS,CAACR,QAAQ;IAClCS,eAAe,EAAEF,KAAK,CAACC,SAAS,CAACC,eAAe;IAChDV,WAAW,EAAEQ,KAAK,CAACC,SAAS,CAACT,WAAW;IACxCW,UAAU,EAAEH,KAAK,CAACC,SAAS,CAACE,UAAU;IACtCC,mBAAmB,EAAEJ,KAAK,CAACC,SAAS,CAACG;EACvC,CAAC;AACH,CAAC;AAED,eAAerB,OAAO,CACpBT,OAAO,CAACyB,eAAe,EAAE;EACvBM,QAAQ,EAAE5B,UAAU;EACpB6B,UAAU,EAAE5B,gBAAgB;EAC5BC,UAAU,EAAEA,UAAU;EACtBC,gBAAgB,EAAEA,gBAAgB;EAClCC,kBAAkB,EAAEA;AACtB,CAAC,CAAC,EACFC,gBACF,CAAC,CAACI,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}