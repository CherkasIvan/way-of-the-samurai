{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _isFunction from \"lodash/isFunction\";\nimport { ARRAY_INSERT, ARRAY_MOVE, ARRAY_POP, ARRAY_PUSH, ARRAY_REMOVE, ARRAY_REMOVE_ALL, ARRAY_SHIFT, ARRAY_SPLICE, ARRAY_SWAP, ARRAY_UNSHIFT, AUTOFILL, BLUR, CHANGE, CLEAR_ASYNC_ERROR, CLEAR_SUBMIT, CLEAR_SUBMIT_ERRORS, DESTROY, FOCUS, INITIALIZE, prefix, REGISTER_FIELD, RESET, RESET_SECTION, SET_SUBMIT_FAILED, SET_SUBMIT_SUCCEEDED, START_ASYNC_VALIDATION, START_SUBMIT, STOP_ASYNC_VALIDATION, STOP_SUBMIT, SUBMIT, TOUCH, UNREGISTER_FIELD, UNTOUCH, UPDATE_SYNC_ERRORS, CLEAR_FIELDS, UPDATE_SYNC_WARNINGS } from './actionTypes';\nimport createDeleteInWithCleanUp from './deleteInWithCleanUp';\nimport plain from './structure/plain';\nvar shouldDelete = function shouldDelete(_ref) {\n  var getIn = _ref.getIn;\n  return function (state, path) {\n    var initialValuesPath = null;\n    if (/^values/.test(path)) {\n      initialValuesPath = path.replace('values', 'initial');\n    }\n    var initialValueComparison = initialValuesPath ? getIn(state, initialValuesPath) === undefined : true;\n    return getIn(state, path) !== undefined && initialValueComparison;\n  };\n};\nvar isReduxFormAction = function isReduxFormAction(action) {\n  return action && action.type && action.type.length > prefix.length && action.type.substring(0, prefix.length) === prefix;\n};\nfunction createReducer(structure) {\n  var _behaviors;\n  var deepEqual = structure.deepEqual,\n    empty = structure.empty,\n    forEach = structure.forEach,\n    getIn = structure.getIn,\n    setIn = structure.setIn,\n    deleteIn = structure.deleteIn,\n    fromJS = structure.fromJS,\n    keys = structure.keys,\n    size = structure.size,\n    some = structure.some,\n    splice = structure.splice;\n  var deleteInWithCleanUp = createDeleteInWithCleanUp(structure)(shouldDelete);\n  var plainDeleteInWithCleanUp = createDeleteInWithCleanUp(plain)(shouldDelete);\n  var doSplice = function doSplice(state, key, field, index, removeNum, value, force) {\n    var existing = getIn(state, key + \".\" + field);\n    return existing || force ? setIn(state, key + \".\" + field, splice(existing, index, removeNum, value)) : state;\n  };\n  var doPlainSplice = function doPlainSplice(state, key, field, index, removeNum, value, force) {\n    var slice = getIn(state, key);\n    var existing = plain.getIn(slice, field);\n    return existing || force ? setIn(state, key, plain.setIn(slice, field, plain.splice(existing, index, removeNum, value))) : state;\n  };\n  var rootKeys = ['values', 'fields', 'submitErrors', 'asyncErrors'];\n  var arraySplice = function arraySplice(state, field, index, removeNum, value) {\n    var result = state;\n    var nonValuesValue = value != null ? empty : undefined;\n    result = doSplice(result, 'values', field, index, removeNum, value, true);\n    result = doSplice(result, 'fields', field, index, removeNum, nonValuesValue);\n    result = doPlainSplice(result, 'syncErrors', field, index, removeNum, undefined);\n    result = doPlainSplice(result, 'syncWarnings', field, index, removeNum, undefined);\n    result = doSplice(result, 'submitErrors', field, index, removeNum, undefined);\n    result = doSplice(result, 'asyncErrors', field, index, removeNum, undefined);\n    return result;\n  };\n  var behaviors = (_behaviors = {}, _behaviors[ARRAY_INSERT] = function (state, _ref2) {\n    var _ref2$meta = _ref2.meta,\n      field = _ref2$meta.field,\n      index = _ref2$meta.index,\n      payload = _ref2.payload;\n    return arraySplice(state, field, index, 0, payload);\n  }, _behaviors[ARRAY_MOVE] = function (state, _ref3) {\n    var _ref3$meta = _ref3.meta,\n      field = _ref3$meta.field,\n      from = _ref3$meta.from,\n      to = _ref3$meta.to;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    var result = state;\n    if (length) {\n      rootKeys.forEach(function (key) {\n        var path = key + \".\" + field;\n        if (getIn(result, path)) {\n          var value = getIn(result, path + \"[\" + from + \"]\");\n          result = setIn(result, path, splice(getIn(result, path), from, 1)); // remove\n\n          result = setIn(result, path, splice(getIn(result, path), to, 0, value)); // insert\n        }\n      });\n    }\n\n    return result;\n  }, _behaviors[ARRAY_POP] = function (state, _ref4) {\n    var field = _ref4.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, length - 1, 1) : state;\n  }, _behaviors[ARRAY_PUSH] = function (state, _ref5) {\n    var field = _ref5.meta.field,\n      payload = _ref5.payload;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return arraySplice(state, field, length, 0, payload);\n  }, _behaviors[ARRAY_REMOVE] = function (state, _ref6) {\n    var _ref6$meta = _ref6.meta,\n      field = _ref6$meta.field,\n      index = _ref6$meta.index;\n    return arraySplice(state, field, index, 1);\n  }, _behaviors[ARRAY_REMOVE_ALL] = function (state, _ref7) {\n    var field = _ref7.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, 0, length) : state;\n  }, _behaviors[ARRAY_SHIFT] = function (state, _ref8) {\n    var field = _ref8.meta.field;\n    return arraySplice(state, field, 0, 1);\n  }, _behaviors[ARRAY_SPLICE] = function (state, _ref9) {\n    var _ref9$meta = _ref9.meta,\n      field = _ref9$meta.field,\n      index = _ref9$meta.index,\n      removeNum = _ref9$meta.removeNum,\n      payload = _ref9.payload;\n    return arraySplice(state, field, index, removeNum, payload);\n  }, _behaviors[ARRAY_SWAP] = function (state, _ref10) {\n    var _ref10$meta = _ref10.meta,\n      field = _ref10$meta.field,\n      indexA = _ref10$meta.indexA,\n      indexB = _ref10$meta.indexB;\n    var result = state;\n    rootKeys.forEach(function (key) {\n      var valueA = getIn(result, key + \".\" + field + \"[\" + indexA + \"]\");\n      var valueB = getIn(result, key + \".\" + field + \"[\" + indexB + \"]\");\n      if (valueA !== undefined || valueB !== undefined) {\n        result = setIn(result, key + \".\" + field + \"[\" + indexA + \"]\", valueB);\n        result = setIn(result, key + \".\" + field + \"[\" + indexB + \"]\", valueA);\n      }\n    });\n    return result;\n  }, _behaviors[ARRAY_UNSHIFT] = function (state, _ref11) {\n    var field = _ref11.meta.field,\n      payload = _ref11.payload;\n    return arraySplice(state, field, 0, 0, payload);\n  }, _behaviors[AUTOFILL] = function (state, _ref12) {\n    var field = _ref12.meta.field,\n      payload = _ref12.payload;\n    var result = state;\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n    result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    result = setIn(result, \"fields.\" + field + \".autofilled\", true);\n    result = setIn(result, \"values.\" + field, payload);\n    return result;\n  }, _behaviors[BLUR] = function (state, _ref13) {\n    var _ref13$meta = _ref13.meta,\n      field = _ref13$meta.field,\n      touch = _ref13$meta.touch,\n      payload = _ref13.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n    if (initial === undefined && payload === '') {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (payload !== undefined) {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n    if (field === getIn(result, 'active')) {\n      result = deleteIn(result, 'active');\n    }\n    result = deleteIn(result, \"fields.\" + field + \".active\");\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n    return result;\n  }, _behaviors[CHANGE] = function (state, _ref14) {\n    var _ref14$meta = _ref14.meta,\n      field = _ref14$meta.field,\n      touch = _ref14$meta.touch,\n      persistentSubmitErrors = _ref14$meta.persistentSubmitErrors,\n      payload = _ref14.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n    if (initial === undefined && payload === '' || payload === undefined) {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (_isFunction(payload)) {\n      var fieldCurrentValue = getIn(state, \"values.\" + field);\n      result = setIn(result, \"values.\" + field, payload(fieldCurrentValue, state.values));\n    } else {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n    if (!persistentSubmitErrors) {\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    }\n    result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n    return result;\n  }, _behaviors[CLEAR_SUBMIT] = function (state) {\n    return deleteIn(state, 'triggerSubmit');\n  }, _behaviors[CLEAR_SUBMIT_ERRORS] = function (state) {\n    var result = state;\n    result = deleteInWithCleanUp(result, 'submitErrors');\n    result = deleteIn(result, 'error');\n    return result;\n  }, _behaviors[CLEAR_ASYNC_ERROR] = function (state, _ref15) {\n    var field = _ref15.meta.field;\n    return deleteIn(state, \"asyncErrors.\" + field);\n  }, _behaviors[CLEAR_FIELDS] = function (state, _ref16) {\n    var _ref16$meta = _ref16.meta,\n      keepTouched = _ref16$meta.keepTouched,\n      persistentSubmitErrors = _ref16$meta.persistentSubmitErrors,\n      fields = _ref16$meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n      if (!persistentSubmitErrors) {\n        result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n      }\n      result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n      if (!keepTouched) {\n        result = deleteIn(result, \"fields.\" + field + \".touched\");\n      }\n      var values = getIn(state, \"initial.\" + field);\n      result = values ? setIn(result, \"values.\" + field, values) : deleteInWithCleanUp(result, \"values.\" + field);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[FOCUS] = function (state, _ref17) {\n    var field = _ref17.meta.field;\n    var result = state;\n    var previouslyActive = getIn(state, 'active');\n    result = deleteIn(result, \"fields.\" + previouslyActive + \".active\");\n    result = setIn(result, \"fields.\" + field + \".visited\", true);\n    result = setIn(result, \"fields.\" + field + \".active\", true);\n    result = setIn(result, 'active', field);\n    return result;\n  }, _behaviors[INITIALIZE] = function (state, _ref18) {\n    var payload = _ref18.payload,\n      _ref18$meta = _ref18.meta,\n      keepDirty = _ref18$meta.keepDirty,\n      keepSubmitSucceeded = _ref18$meta.keepSubmitSucceeded,\n      updateUnregisteredFields = _ref18$meta.updateUnregisteredFields,\n      keepValues = _ref18$meta.keepValues;\n    var mapData = fromJS(payload);\n    var result = empty; // clean all field state\n    // persist old warnings, they will get recalculated if the new form values are different from the old values\n\n    var warning = getIn(state, 'warning');\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    }\n    var syncWarnings = getIn(state, 'syncWarnings');\n    if (syncWarnings) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } // persist old errors, they will get recalculated if the new form values are different from the old values\n\n    var error = getIn(state, 'error');\n    if (error) {\n      result = setIn(result, 'error', error);\n    }\n    var syncErrors = getIn(state, 'syncErrors');\n    if (syncErrors) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    }\n    var registeredFields = getIn(state, 'registeredFields');\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n    var previousValues = getIn(state, 'values');\n    var previousInitialValues = getIn(state, 'initial');\n    var newInitialValues = mapData;\n    var newValues = previousValues;\n    if (keepDirty && registeredFields) {\n      if (!deepEqual(newInitialValues, previousInitialValues)) {\n        //\n        // Keep the value of dirty fields while updating the value of\n        // pristine fields. This way, apps can reinitialize forms while\n        // avoiding stomping on user edits.\n        //\n        // Note 1: The initialize action replaces all initial values\n        // regardless of keepDirty.\n        //\n        // Note 2: When a field is dirty, keepDirty is enabled, and the field\n        // value is the same as the new initial value for the field, the\n        // initialize action causes the field to become pristine. That effect\n        // is what we want.\n        //\n        var overwritePristineValue = function overwritePristineValue(name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n          var previousValue = getIn(previousValues, name);\n          if (deepEqual(previousValue, previousInitialValue)) {\n            // Overwrite the old pristine value with the new pristine value\n            var newInitialValue = getIn(newInitialValues, name); // This check prevents any 'setIn' call that would create useless\n            // nested objects, since the path to the new field value would\n            // evaluate to the same (especially for undefined values)\n\n            if (getIn(newValues, name) !== newInitialValue) {\n              newValues = setIn(newValues, name, newInitialValue);\n            }\n          }\n        };\n        if (!updateUnregisteredFields) {\n          forEach(keys(registeredFields), function (name) {\n            return overwritePristineValue(name);\n          });\n        }\n        forEach(keys(newInitialValues), function (name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n          if (typeof previousInitialValue === 'undefined') {\n            // Add new values at the root level.\n            var newInitialValue = getIn(newInitialValues, name);\n            newValues = setIn(newValues, name, newInitialValue);\n          }\n          if (updateUnregisteredFields) {\n            overwritePristineValue(name);\n          }\n        });\n      }\n    } else {\n      newValues = newInitialValues;\n    }\n    if (keepValues) {\n      forEach(keys(previousValues), function (name) {\n        var previousValue = getIn(previousValues, name);\n        newValues = setIn(newValues, name, previousValue);\n      });\n      forEach(keys(previousInitialValues), function (name) {\n        var previousInitialValue = getIn(previousInitialValues, name);\n        newInitialValues = setIn(newInitialValues, name, previousInitialValue);\n      });\n    }\n    if (keepSubmitSucceeded && getIn(state, 'submitSucceeded')) {\n      result = setIn(result, 'submitSucceeded', true);\n    }\n    result = setIn(result, 'values', newValues);\n    result = setIn(result, 'initial', newInitialValues);\n    return result;\n  }, _behaviors[REGISTER_FIELD] = function (state, _ref19) {\n    var _ref19$payload = _ref19.payload,\n      name = _ref19$payload.name,\n      type = _ref19$payload.type;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(state, key);\n    if (field) {\n      var count = getIn(field, 'count') + 1;\n      field = setIn(field, 'count', count);\n    } else {\n      field = fromJS({\n        name: name,\n        type: type,\n        count: 1\n      });\n    }\n    return setIn(state, key, field);\n  }, _behaviors[RESET] = function (state) {\n    var result = empty;\n    var registeredFields = getIn(state, 'registeredFields');\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n    var values = getIn(state, 'initial');\n    if (values) {\n      result = setIn(result, 'values', values);\n      result = setIn(result, 'initial', values);\n    }\n    return result;\n  }, _behaviors[RESET_SECTION] = function (state, _ref20) {\n    var sections = _ref20.meta.sections;\n    var result = state;\n    sections.forEach(function (section) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"fields.\" + section);\n      var values = getIn(state, \"initial.\" + section);\n      result = values ? setIn(result, \"values.\" + section, values) : deleteInWithCleanUp(result, \"values.\" + section);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[SUBMIT] = function (state) {\n    return setIn(state, 'triggerSubmit', true);\n  }, _behaviors[START_ASYNC_VALIDATION] = function (state, _ref21) {\n    var field = _ref21.meta.field;\n    return setIn(state, 'asyncValidating', field || true);\n  }, _behaviors[START_SUBMIT] = function (state) {\n    return setIn(state, 'submitting', true);\n  }, _behaviors[STOP_ASYNC_VALIDATION] = function (state, _ref22) {\n    var payload = _ref22.payload;\n    var result = state;\n    result = deleteIn(result, 'asyncValidating');\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n        fieldErrors = _objectWithoutPropertiesLoose(payload, [\"_error\"]);\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      }\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'asyncErrors', fromJS(fieldErrors));\n      }\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'asyncErrors');\n    }\n    return result;\n  }, _behaviors[STOP_SUBMIT] = function (state, _ref23) {\n    var payload = _ref23.payload;\n    var result = state;\n    result = deleteIn(result, 'submitting');\n    result = deleteIn(result, 'submitFailed');\n    result = deleteIn(result, 'submitSucceeded');\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n        fieldErrors = _objectWithoutPropertiesLoose(payload, [\"_error\"]);\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      } else {\n        result = deleteIn(result, 'error');\n      }\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'submitErrors', fromJS(fieldErrors));\n      } else {\n        result = deleteIn(result, 'submitErrors');\n      }\n      result = setIn(result, 'submitFailed', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'submitErrors');\n    }\n    return result;\n  }, _behaviors[SET_SUBMIT_FAILED] = function (state, _ref24) {\n    var fields = _ref24.meta.fields;\n    var result = state;\n    result = setIn(result, 'submitFailed', true);\n    result = deleteIn(result, 'submitSucceeded');\n    result = deleteIn(result, 'submitting');\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n    if (fields.length) {\n      result = setIn(result, 'anyTouched', true);\n    }\n    return result;\n  }, _behaviors[SET_SUBMIT_SUCCEEDED] = function (state) {\n    var result = state;\n    result = deleteIn(result, 'submitFailed');\n    result = setIn(result, 'submitSucceeded', true);\n    return result;\n  }, _behaviors[TOUCH] = function (state, _ref25) {\n    var fields = _ref25.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n    result = setIn(result, 'anyTouched', true);\n    return result;\n  }, _behaviors[UNREGISTER_FIELD] = function (state, _ref26) {\n    var _ref26$payload = _ref26.payload,\n      name = _ref26$payload.name,\n      destroyOnUnmount = _ref26$payload.destroyOnUnmount;\n    var result = state;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(result, key);\n    if (!field) {\n      return result;\n    }\n    var count = getIn(field, 'count') - 1;\n    if (count <= 0 && destroyOnUnmount) {\n      // Note: Cannot use deleteWithCleanUp here because of the flat nature of registeredFields\n      result = deleteIn(result, key);\n      if (deepEqual(getIn(result, 'registeredFields'), empty)) {\n        result = deleteIn(result, 'registeredFields');\n      }\n      var syncErrors = getIn(result, 'syncErrors');\n      if (syncErrors) {\n        syncErrors = plainDeleteInWithCleanUp(syncErrors, name);\n        if (plain.deepEqual(syncErrors, plain.empty)) {\n          result = deleteIn(result, 'syncErrors');\n        } else {\n          result = setIn(result, 'syncErrors', syncErrors);\n        }\n      }\n      var syncWarnings = getIn(result, 'syncWarnings');\n      if (syncWarnings) {\n        syncWarnings = plainDeleteInWithCleanUp(syncWarnings, name);\n        if (plain.deepEqual(syncWarnings, plain.empty)) {\n          result = deleteIn(result, 'syncWarnings');\n        } else {\n          result = setIn(result, 'syncWarnings', syncWarnings);\n        }\n      }\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + name);\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + name);\n    } else {\n      field = setIn(field, 'count', count);\n      result = setIn(result, key, field);\n    }\n    return result;\n  }, _behaviors[UNTOUCH] = function (state, _ref27) {\n    var fields = _ref27.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = deleteIn(result, \"fields.\" + field + \".touched\");\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[UPDATE_SYNC_ERRORS] = function (state, _ref28) {\n    var _ref28$payload = _ref28.payload,\n      syncErrors = _ref28$payload.syncErrors,\n      error = _ref28$payload.error;\n    var result = state;\n    if (error) {\n      result = setIn(result, 'error', error);\n      result = setIn(result, 'syncError', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'syncError');\n    }\n    if (Object.keys(syncErrors).length) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    } else {\n      result = deleteIn(result, 'syncErrors');\n    }\n    return result;\n  }, _behaviors[UPDATE_SYNC_WARNINGS] = function (state, _ref29) {\n    var _ref29$payload = _ref29.payload,\n      syncWarnings = _ref29$payload.syncWarnings,\n      warning = _ref29$payload.warning;\n    var result = state;\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    } else {\n      result = deleteIn(result, 'warning');\n    }\n    if (Object.keys(syncWarnings).length) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } else {\n      result = deleteIn(result, 'syncWarnings');\n    }\n    return result;\n  }, _behaviors);\n  var reducer = function reducer(state, action) {\n    if (state === void 0) {\n      state = empty;\n    }\n    var behavior = behaviors[action.type];\n    return behavior ? behavior(state, action) : state;\n  };\n  var byForm = function byForm(reducer) {\n    return function (state, action) {\n      if (state === void 0) {\n        state = empty;\n      }\n      if (action === void 0) {\n        action = {\n          type: 'NONE'\n        };\n      }\n      var form = action && action.meta && action.meta.form;\n      if (!form || !isReduxFormAction(action)) {\n        return state;\n      }\n      if (action.type === DESTROY && action.meta && action.meta.form) {\n        return action.meta.form.reduce(function (result, form) {\n          return deleteInWithCleanUp(result, form);\n        }, state);\n      }\n      var formState = getIn(state, form);\n      var result = reducer(formState, action);\n      return result === formState ? state : setIn(state, form, result);\n    };\n  };\n  /**\n   * Adds additional functionality to the reducer\n   */\n\n  function decorate(target) {\n    target.plugin = function (reducers, config) {\n      var _this = this;\n      if (config === void 0) {\n        config = {};\n      }\n\n      // use 'function' keyword to enable 'this'\n      return decorate(function (state, action) {\n        if (state === void 0) {\n          state = empty;\n        }\n        if (action === void 0) {\n          action = {\n            type: 'NONE'\n          };\n        }\n        var callPlugin = function callPlugin(processed, key) {\n          var previousState = getIn(processed, key);\n          var nextState = reducers[key](previousState, action, getIn(state, key));\n          return nextState !== previousState ? setIn(processed, key, nextState) : processed;\n        };\n        var processed = _this(state, action); // run through redux-form reducer\n\n        var form = action && action.meta && action.meta.form;\n        if (form && !config.receiveAllFormActions) {\n          // this is an action aimed at forms, so only give it to the specified form's plugin\n          return reducers[form] ? callPlugin(processed, form) : processed;\n        } else {\n          // this is not a form-specific action, so send it to all the plugins\n          return Object.keys(reducers).reduce(callPlugin, processed);\n        }\n      });\n    };\n    return target;\n  }\n  return decorate(byForm(reducer));\n}\nexport default createReducer;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_isFunction","ARRAY_INSERT","ARRAY_MOVE","ARRAY_POP","ARRAY_PUSH","ARRAY_REMOVE","ARRAY_REMOVE_ALL","ARRAY_SHIFT","ARRAY_SPLICE","ARRAY_SWAP","ARRAY_UNSHIFT","AUTOFILL","BLUR","CHANGE","CLEAR_ASYNC_ERROR","CLEAR_SUBMIT","CLEAR_SUBMIT_ERRORS","DESTROY","FOCUS","INITIALIZE","prefix","REGISTER_FIELD","RESET","RESET_SECTION","SET_SUBMIT_FAILED","SET_SUBMIT_SUCCEEDED","START_ASYNC_VALIDATION","START_SUBMIT","STOP_ASYNC_VALIDATION","STOP_SUBMIT","SUBMIT","TOUCH","UNREGISTER_FIELD","UNTOUCH","UPDATE_SYNC_ERRORS","CLEAR_FIELDS","UPDATE_SYNC_WARNINGS","createDeleteInWithCleanUp","plain","shouldDelete","_ref","getIn","state","path","initialValuesPath","test","replace","initialValueComparison","undefined","isReduxFormAction","action","type","length","substring","createReducer","structure","_behaviors","deepEqual","empty","forEach","setIn","deleteIn","fromJS","keys","size","some","splice","deleteInWithCleanUp","plainDeleteInWithCleanUp","doSplice","key","field","index","removeNum","value","force","existing","doPlainSplice","slice","rootKeys","arraySplice","result","nonValuesValue","behaviors","_ref2","_ref2$meta","meta","payload","_ref3","_ref3$meta","from","to","array","_ref4","_ref5","_ref6","_ref6$meta","_ref7","_ref8","_ref9","_ref9$meta","_ref10","_ref10$meta","indexA","indexB","valueA","valueB","_ref11","_ref12","_ref13","_ref13$meta","touch","initial","_ref14","_ref14$meta","persistentSubmitErrors","fieldCurrentValue","values","_ref15","_ref16","_ref16$meta","keepTouched","fields","anyTouched","_ref17","previouslyActive","_ref18","_ref18$meta","keepDirty","keepSubmitSucceeded","updateUnregisteredFields","keepValues","mapData","warning","syncWarnings","error","syncErrors","registeredFields","previousValues","previousInitialValues","newInitialValues","newValues","overwritePristineValue","name","previousInitialValue","previousValue","newInitialValue","_ref19","_ref19$payload","count","_ref20","sections","section","_ref21","_ref22","Object","_error","fieldErrors","_ref23","_ref24","_ref25","_ref26","_ref26$payload","destroyOnUnmount","_ref27","_ref28","_ref28$payload","_ref29","_ref29$payload","reducer","behavior","byForm","form","reduce","formState","decorate","target","plugin","reducers","config","_this","callPlugin","processed","previousState","nextState","receiveAllFormActions"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/node_modules/redux-form/es/createReducer.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _isFunction from \"lodash/isFunction\";\nimport { ARRAY_INSERT, ARRAY_MOVE, ARRAY_POP, ARRAY_PUSH, ARRAY_REMOVE, ARRAY_REMOVE_ALL, ARRAY_SHIFT, ARRAY_SPLICE, ARRAY_SWAP, ARRAY_UNSHIFT, AUTOFILL, BLUR, CHANGE, CLEAR_ASYNC_ERROR, CLEAR_SUBMIT, CLEAR_SUBMIT_ERRORS, DESTROY, FOCUS, INITIALIZE, prefix, REGISTER_FIELD, RESET, RESET_SECTION, SET_SUBMIT_FAILED, SET_SUBMIT_SUCCEEDED, START_ASYNC_VALIDATION, START_SUBMIT, STOP_ASYNC_VALIDATION, STOP_SUBMIT, SUBMIT, TOUCH, UNREGISTER_FIELD, UNTOUCH, UPDATE_SYNC_ERRORS, CLEAR_FIELDS, UPDATE_SYNC_WARNINGS } from './actionTypes';\nimport createDeleteInWithCleanUp from './deleteInWithCleanUp';\nimport plain from './structure/plain';\n\nvar shouldDelete = function shouldDelete(_ref) {\n  var getIn = _ref.getIn;\n  return function (state, path) {\n    var initialValuesPath = null;\n\n    if (/^values/.test(path)) {\n      initialValuesPath = path.replace('values', 'initial');\n    }\n\n    var initialValueComparison = initialValuesPath ? getIn(state, initialValuesPath) === undefined : true;\n    return getIn(state, path) !== undefined && initialValueComparison;\n  };\n};\n\nvar isReduxFormAction = function isReduxFormAction(action) {\n  return action && action.type && action.type.length > prefix.length && action.type.substring(0, prefix.length) === prefix;\n};\n\nfunction createReducer(structure) {\n  var _behaviors;\n\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      forEach = structure.forEach,\n      getIn = structure.getIn,\n      setIn = structure.setIn,\n      deleteIn = structure.deleteIn,\n      fromJS = structure.fromJS,\n      keys = structure.keys,\n      size = structure.size,\n      some = structure.some,\n      splice = structure.splice;\n  var deleteInWithCleanUp = createDeleteInWithCleanUp(structure)(shouldDelete);\n  var plainDeleteInWithCleanUp = createDeleteInWithCleanUp(plain)(shouldDelete);\n\n  var doSplice = function doSplice(state, key, field, index, removeNum, value, force) {\n    var existing = getIn(state, key + \".\" + field);\n    return existing || force ? setIn(state, key + \".\" + field, splice(existing, index, removeNum, value)) : state;\n  };\n\n  var doPlainSplice = function doPlainSplice(state, key, field, index, removeNum, value, force) {\n    var slice = getIn(state, key);\n    var existing = plain.getIn(slice, field);\n    return existing || force ? setIn(state, key, plain.setIn(slice, field, plain.splice(existing, index, removeNum, value))) : state;\n  };\n\n  var rootKeys = ['values', 'fields', 'submitErrors', 'asyncErrors'];\n\n  var arraySplice = function arraySplice(state, field, index, removeNum, value) {\n    var result = state;\n    var nonValuesValue = value != null ? empty : undefined;\n    result = doSplice(result, 'values', field, index, removeNum, value, true);\n    result = doSplice(result, 'fields', field, index, removeNum, nonValuesValue);\n    result = doPlainSplice(result, 'syncErrors', field, index, removeNum, undefined);\n    result = doPlainSplice(result, 'syncWarnings', field, index, removeNum, undefined);\n    result = doSplice(result, 'submitErrors', field, index, removeNum, undefined);\n    result = doSplice(result, 'asyncErrors', field, index, removeNum, undefined);\n    return result;\n  };\n\n  var behaviors = (_behaviors = {}, _behaviors[ARRAY_INSERT] = function (state, _ref2) {\n    var _ref2$meta = _ref2.meta,\n        field = _ref2$meta.field,\n        index = _ref2$meta.index,\n        payload = _ref2.payload;\n    return arraySplice(state, field, index, 0, payload);\n  }, _behaviors[ARRAY_MOVE] = function (state, _ref3) {\n    var _ref3$meta = _ref3.meta,\n        field = _ref3$meta.field,\n        from = _ref3$meta.from,\n        to = _ref3$meta.to;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    var result = state;\n\n    if (length) {\n      rootKeys.forEach(function (key) {\n        var path = key + \".\" + field;\n\n        if (getIn(result, path)) {\n          var value = getIn(result, path + \"[\" + from + \"]\");\n          result = setIn(result, path, splice(getIn(result, path), from, 1)); // remove\n\n          result = setIn(result, path, splice(getIn(result, path), to, 0, value)); // insert\n        }\n      });\n    }\n\n    return result;\n  }, _behaviors[ARRAY_POP] = function (state, _ref4) {\n    var field = _ref4.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, length - 1, 1) : state;\n  }, _behaviors[ARRAY_PUSH] = function (state, _ref5) {\n    var field = _ref5.meta.field,\n        payload = _ref5.payload;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return arraySplice(state, field, length, 0, payload);\n  }, _behaviors[ARRAY_REMOVE] = function (state, _ref6) {\n    var _ref6$meta = _ref6.meta,\n        field = _ref6$meta.field,\n        index = _ref6$meta.index;\n    return arraySplice(state, field, index, 1);\n  }, _behaviors[ARRAY_REMOVE_ALL] = function (state, _ref7) {\n    var field = _ref7.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, 0, length) : state;\n  }, _behaviors[ARRAY_SHIFT] = function (state, _ref8) {\n    var field = _ref8.meta.field;\n    return arraySplice(state, field, 0, 1);\n  }, _behaviors[ARRAY_SPLICE] = function (state, _ref9) {\n    var _ref9$meta = _ref9.meta,\n        field = _ref9$meta.field,\n        index = _ref9$meta.index,\n        removeNum = _ref9$meta.removeNum,\n        payload = _ref9.payload;\n    return arraySplice(state, field, index, removeNum, payload);\n  }, _behaviors[ARRAY_SWAP] = function (state, _ref10) {\n    var _ref10$meta = _ref10.meta,\n        field = _ref10$meta.field,\n        indexA = _ref10$meta.indexA,\n        indexB = _ref10$meta.indexB;\n    var result = state;\n    rootKeys.forEach(function (key) {\n      var valueA = getIn(result, key + \".\" + field + \"[\" + indexA + \"]\");\n      var valueB = getIn(result, key + \".\" + field + \"[\" + indexB + \"]\");\n\n      if (valueA !== undefined || valueB !== undefined) {\n        result = setIn(result, key + \".\" + field + \"[\" + indexA + \"]\", valueB);\n        result = setIn(result, key + \".\" + field + \"[\" + indexB + \"]\", valueA);\n      }\n    });\n    return result;\n  }, _behaviors[ARRAY_UNSHIFT] = function (state, _ref11) {\n    var field = _ref11.meta.field,\n        payload = _ref11.payload;\n    return arraySplice(state, field, 0, 0, payload);\n  }, _behaviors[AUTOFILL] = function (state, _ref12) {\n    var field = _ref12.meta.field,\n        payload = _ref12.payload;\n    var result = state;\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n    result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    result = setIn(result, \"fields.\" + field + \".autofilled\", true);\n    result = setIn(result, \"values.\" + field, payload);\n    return result;\n  }, _behaviors[BLUR] = function (state, _ref13) {\n    var _ref13$meta = _ref13.meta,\n        field = _ref13$meta.field,\n        touch = _ref13$meta.touch,\n        payload = _ref13.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '') {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (payload !== undefined) {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    if (field === getIn(result, 'active')) {\n      result = deleteIn(result, 'active');\n    }\n\n    result = deleteIn(result, \"fields.\" + field + \".active\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[CHANGE] = function (state, _ref14) {\n    var _ref14$meta = _ref14.meta,\n        field = _ref14$meta.field,\n        touch = _ref14$meta.touch,\n        persistentSubmitErrors = _ref14$meta.persistentSubmitErrors,\n        payload = _ref14.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '' || payload === undefined) {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (_isFunction(payload)) {\n      var fieldCurrentValue = getIn(state, \"values.\" + field);\n      result = setIn(result, \"values.\" + field, payload(fieldCurrentValue, state.values));\n    } else {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n    if (!persistentSubmitErrors) {\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    }\n\n    result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[CLEAR_SUBMIT] = function (state) {\n    return deleteIn(state, 'triggerSubmit');\n  }, _behaviors[CLEAR_SUBMIT_ERRORS] = function (state) {\n    var result = state;\n    result = deleteInWithCleanUp(result, 'submitErrors');\n    result = deleteIn(result, 'error');\n    return result;\n  }, _behaviors[CLEAR_ASYNC_ERROR] = function (state, _ref15) {\n    var field = _ref15.meta.field;\n    return deleteIn(state, \"asyncErrors.\" + field);\n  }, _behaviors[CLEAR_FIELDS] = function (state, _ref16) {\n    var _ref16$meta = _ref16.meta,\n        keepTouched = _ref16$meta.keepTouched,\n        persistentSubmitErrors = _ref16$meta.persistentSubmitErrors,\n        fields = _ref16$meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n      if (!persistentSubmitErrors) {\n        result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n      }\n\n      result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n      if (!keepTouched) {\n        result = deleteIn(result, \"fields.\" + field + \".touched\");\n      }\n\n      var values = getIn(state, \"initial.\" + field);\n      result = values ? setIn(result, \"values.\" + field, values) : deleteInWithCleanUp(result, \"values.\" + field);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[FOCUS] = function (state, _ref17) {\n    var field = _ref17.meta.field;\n    var result = state;\n    var previouslyActive = getIn(state, 'active');\n    result = deleteIn(result, \"fields.\" + previouslyActive + \".active\");\n    result = setIn(result, \"fields.\" + field + \".visited\", true);\n    result = setIn(result, \"fields.\" + field + \".active\", true);\n    result = setIn(result, 'active', field);\n    return result;\n  }, _behaviors[INITIALIZE] = function (state, _ref18) {\n    var payload = _ref18.payload,\n        _ref18$meta = _ref18.meta,\n        keepDirty = _ref18$meta.keepDirty,\n        keepSubmitSucceeded = _ref18$meta.keepSubmitSucceeded,\n        updateUnregisteredFields = _ref18$meta.updateUnregisteredFields,\n        keepValues = _ref18$meta.keepValues;\n    var mapData = fromJS(payload);\n    var result = empty; // clean all field state\n    // persist old warnings, they will get recalculated if the new form values are different from the old values\n\n    var warning = getIn(state, 'warning');\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    }\n\n    var syncWarnings = getIn(state, 'syncWarnings');\n\n    if (syncWarnings) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } // persist old errors, they will get recalculated if the new form values are different from the old values\n\n\n    var error = getIn(state, 'error');\n\n    if (error) {\n      result = setIn(result, 'error', error);\n    }\n\n    var syncErrors = getIn(state, 'syncErrors');\n\n    if (syncErrors) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    }\n\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var previousValues = getIn(state, 'values');\n    var previousInitialValues = getIn(state, 'initial');\n    var newInitialValues = mapData;\n    var newValues = previousValues;\n\n    if (keepDirty && registeredFields) {\n      if (!deepEqual(newInitialValues, previousInitialValues)) {\n        //\n        // Keep the value of dirty fields while updating the value of\n        // pristine fields. This way, apps can reinitialize forms while\n        // avoiding stomping on user edits.\n        //\n        // Note 1: The initialize action replaces all initial values\n        // regardless of keepDirty.\n        //\n        // Note 2: When a field is dirty, keepDirty is enabled, and the field\n        // value is the same as the new initial value for the field, the\n        // initialize action causes the field to become pristine. That effect\n        // is what we want.\n        //\n        var overwritePristineValue = function overwritePristineValue(name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n          var previousValue = getIn(previousValues, name);\n\n          if (deepEqual(previousValue, previousInitialValue)) {\n            // Overwrite the old pristine value with the new pristine value\n            var newInitialValue = getIn(newInitialValues, name); // This check prevents any 'setIn' call that would create useless\n            // nested objects, since the path to the new field value would\n            // evaluate to the same (especially for undefined values)\n\n            if (getIn(newValues, name) !== newInitialValue) {\n              newValues = setIn(newValues, name, newInitialValue);\n            }\n          }\n        };\n\n        if (!updateUnregisteredFields) {\n          forEach(keys(registeredFields), function (name) {\n            return overwritePristineValue(name);\n          });\n        }\n\n        forEach(keys(newInitialValues), function (name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n\n          if (typeof previousInitialValue === 'undefined') {\n            // Add new values at the root level.\n            var newInitialValue = getIn(newInitialValues, name);\n            newValues = setIn(newValues, name, newInitialValue);\n          }\n\n          if (updateUnregisteredFields) {\n            overwritePristineValue(name);\n          }\n        });\n      }\n    } else {\n      newValues = newInitialValues;\n    }\n\n    if (keepValues) {\n      forEach(keys(previousValues), function (name) {\n        var previousValue = getIn(previousValues, name);\n        newValues = setIn(newValues, name, previousValue);\n      });\n      forEach(keys(previousInitialValues), function (name) {\n        var previousInitialValue = getIn(previousInitialValues, name);\n        newInitialValues = setIn(newInitialValues, name, previousInitialValue);\n      });\n    }\n\n    if (keepSubmitSucceeded && getIn(state, 'submitSucceeded')) {\n      result = setIn(result, 'submitSucceeded', true);\n    }\n\n    result = setIn(result, 'values', newValues);\n    result = setIn(result, 'initial', newInitialValues);\n    return result;\n  }, _behaviors[REGISTER_FIELD] = function (state, _ref19) {\n    var _ref19$payload = _ref19.payload,\n        name = _ref19$payload.name,\n        type = _ref19$payload.type;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(state, key);\n\n    if (field) {\n      var count = getIn(field, 'count') + 1;\n      field = setIn(field, 'count', count);\n    } else {\n      field = fromJS({\n        name: name,\n        type: type,\n        count: 1\n      });\n    }\n\n    return setIn(state, key, field);\n  }, _behaviors[RESET] = function (state) {\n    var result = empty;\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var values = getIn(state, 'initial');\n\n    if (values) {\n      result = setIn(result, 'values', values);\n      result = setIn(result, 'initial', values);\n    }\n\n    return result;\n  }, _behaviors[RESET_SECTION] = function (state, _ref20) {\n    var sections = _ref20.meta.sections;\n    var result = state;\n    sections.forEach(function (section) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"fields.\" + section);\n      var values = getIn(state, \"initial.\" + section);\n      result = values ? setIn(result, \"values.\" + section, values) : deleteInWithCleanUp(result, \"values.\" + section);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[SUBMIT] = function (state) {\n    return setIn(state, 'triggerSubmit', true);\n  }, _behaviors[START_ASYNC_VALIDATION] = function (state, _ref21) {\n    var field = _ref21.meta.field;\n    return setIn(state, 'asyncValidating', field || true);\n  }, _behaviors[START_SUBMIT] = function (state) {\n    return setIn(state, 'submitting', true);\n  }, _behaviors[STOP_ASYNC_VALIDATION] = function (state, _ref22) {\n    var payload = _ref22.payload;\n    var result = state;\n    result = deleteIn(result, 'asyncValidating');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = _objectWithoutPropertiesLoose(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'asyncErrors', fromJS(fieldErrors));\n      }\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'asyncErrors');\n    }\n\n    return result;\n  }, _behaviors[STOP_SUBMIT] = function (state, _ref23) {\n    var payload = _ref23.payload;\n    var result = state;\n    result = deleteIn(result, 'submitting');\n    result = deleteIn(result, 'submitFailed');\n    result = deleteIn(result, 'submitSucceeded');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = _objectWithoutPropertiesLoose(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      } else {\n        result = deleteIn(result, 'error');\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'submitErrors', fromJS(fieldErrors));\n      } else {\n        result = deleteIn(result, 'submitErrors');\n      }\n\n      result = setIn(result, 'submitFailed', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'submitErrors');\n    }\n\n    return result;\n  }, _behaviors[SET_SUBMIT_FAILED] = function (state, _ref24) {\n    var fields = _ref24.meta.fields;\n    var result = state;\n    result = setIn(result, 'submitFailed', true);\n    result = deleteIn(result, 'submitSucceeded');\n    result = deleteIn(result, 'submitting');\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n\n    if (fields.length) {\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[SET_SUBMIT_SUCCEEDED] = function (state) {\n    var result = state;\n    result = deleteIn(result, 'submitFailed');\n    result = setIn(result, 'submitSucceeded', true);\n    return result;\n  }, _behaviors[TOUCH] = function (state, _ref25) {\n    var fields = _ref25.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n    result = setIn(result, 'anyTouched', true);\n    return result;\n  }, _behaviors[UNREGISTER_FIELD] = function (state, _ref26) {\n    var _ref26$payload = _ref26.payload,\n        name = _ref26$payload.name,\n        destroyOnUnmount = _ref26$payload.destroyOnUnmount;\n    var result = state;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(result, key);\n\n    if (!field) {\n      return result;\n    }\n\n    var count = getIn(field, 'count') - 1;\n\n    if (count <= 0 && destroyOnUnmount) {\n      // Note: Cannot use deleteWithCleanUp here because of the flat nature of registeredFields\n      result = deleteIn(result, key);\n\n      if (deepEqual(getIn(result, 'registeredFields'), empty)) {\n        result = deleteIn(result, 'registeredFields');\n      }\n\n      var syncErrors = getIn(result, 'syncErrors');\n\n      if (syncErrors) {\n        syncErrors = plainDeleteInWithCleanUp(syncErrors, name);\n\n        if (plain.deepEqual(syncErrors, plain.empty)) {\n          result = deleteIn(result, 'syncErrors');\n        } else {\n          result = setIn(result, 'syncErrors', syncErrors);\n        }\n      }\n\n      var syncWarnings = getIn(result, 'syncWarnings');\n\n      if (syncWarnings) {\n        syncWarnings = plainDeleteInWithCleanUp(syncWarnings, name);\n\n        if (plain.deepEqual(syncWarnings, plain.empty)) {\n          result = deleteIn(result, 'syncWarnings');\n        } else {\n          result = setIn(result, 'syncWarnings', syncWarnings);\n        }\n      }\n\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + name);\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + name);\n    } else {\n      field = setIn(field, 'count', count);\n      result = setIn(result, key, field);\n    }\n\n    return result;\n  }, _behaviors[UNTOUCH] = function (state, _ref27) {\n    var fields = _ref27.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = deleteIn(result, \"fields.\" + field + \".touched\");\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[UPDATE_SYNC_ERRORS] = function (state, _ref28) {\n    var _ref28$payload = _ref28.payload,\n        syncErrors = _ref28$payload.syncErrors,\n        error = _ref28$payload.error;\n    var result = state;\n\n    if (error) {\n      result = setIn(result, 'error', error);\n      result = setIn(result, 'syncError', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'syncError');\n    }\n\n    if (Object.keys(syncErrors).length) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    } else {\n      result = deleteIn(result, 'syncErrors');\n    }\n\n    return result;\n  }, _behaviors[UPDATE_SYNC_WARNINGS] = function (state, _ref29) {\n    var _ref29$payload = _ref29.payload,\n        syncWarnings = _ref29$payload.syncWarnings,\n        warning = _ref29$payload.warning;\n    var result = state;\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    } else {\n      result = deleteIn(result, 'warning');\n    }\n\n    if (Object.keys(syncWarnings).length) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } else {\n      result = deleteIn(result, 'syncWarnings');\n    }\n\n    return result;\n  }, _behaviors);\n\n  var reducer = function reducer(state, action) {\n    if (state === void 0) {\n      state = empty;\n    }\n\n    var behavior = behaviors[action.type];\n    return behavior ? behavior(state, action) : state;\n  };\n\n  var byForm = function byForm(reducer) {\n    return function (state, action) {\n      if (state === void 0) {\n        state = empty;\n      }\n\n      if (action === void 0) {\n        action = {\n          type: 'NONE'\n        };\n      }\n\n      var form = action && action.meta && action.meta.form;\n\n      if (!form || !isReduxFormAction(action)) {\n        return state;\n      }\n\n      if (action.type === DESTROY && action.meta && action.meta.form) {\n        return action.meta.form.reduce(function (result, form) {\n          return deleteInWithCleanUp(result, form);\n        }, state);\n      }\n\n      var formState = getIn(state, form);\n      var result = reducer(formState, action);\n      return result === formState ? state : setIn(state, form, result);\n    };\n  };\n  /**\n   * Adds additional functionality to the reducer\n   */\n\n\n  function decorate(target) {\n    target.plugin = function (reducers, config) {\n      var _this = this;\n\n      if (config === void 0) {\n        config = {};\n      }\n\n      // use 'function' keyword to enable 'this'\n      return decorate(function (state, action) {\n        if (state === void 0) {\n          state = empty;\n        }\n\n        if (action === void 0) {\n          action = {\n            type: 'NONE'\n          };\n        }\n\n        var callPlugin = function callPlugin(processed, key) {\n          var previousState = getIn(processed, key);\n          var nextState = reducers[key](previousState, action, getIn(state, key));\n          return nextState !== previousState ? setIn(processed, key, nextState) : processed;\n        };\n\n        var processed = _this(state, action); // run through redux-form reducer\n\n\n        var form = action && action.meta && action.meta.form;\n\n        if (form && !config.receiveAllFormActions) {\n          // this is an action aimed at forms, so only give it to the specified form's plugin\n          return reducers[form] ? callPlugin(processed, form) : processed;\n        } else {\n          // this is not a form-specific action, so send it to all the plugins\n          return Object.keys(reducers).reduce(callPlugin, processed);\n        }\n      });\n    };\n\n    return target;\n  }\n\n  return decorate(byForm(reducer));\n}\n\nexport default createReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}