{"ast":null,"code":"var _jsxFileName = \"/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/components/main-content/components/layout/pages/users/UsersContainer.tsx\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport Users from './Users';\nimport { SetUsersAC, SetCurrentPageAC } from '../../../../../../redux/actions/actions';\nimport { requestUsersTC, subscribeUsersTC, unsubscribeUsersTC } from '../../../../../../redux/thunk/users-thunk';\nimport { withAuthRedirect } from '../../../../../shared/redirect/RedirectComponents';\nimport { compose } from '@reduxjs/toolkit';\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from '../../../../../../redux/selectors/users.selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    const users = '/users';\n    const page = `?page=${this.props.currentPage}`;\n    const pageSize = `&count=${this.props.pageSize}`;\n    this.props.getUsersTC(users, page, pageSize);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Users, {\n      ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\nexport default compose(connect(mapStateToProps, {\n  setUsers: SetUsersAC,\n  changePage: SetCurrentPageAC,\n  getUsersTC: requestUsersTC,\n  subscribeUsersTC: subscribeUsersTC,\n  unsubscribeUsersTC: unsubscribeUsersTC\n}), withAuthRedirect)(UsersContainer);","map":{"version":3,"names":["connect","React","Users","SetUsersAC","SetCurrentPageAC","requestUsersTC","subscribeUsersTC","unsubscribeUsersTC","withAuthRedirect","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","getUsers","jsxDEV","_jsxDEV","UsersContainer","Component","componentDidMount","users","page","props","currentPage","pageSize","getUsersTC","render","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","state","totalUsersCount","isFetching","followingInProgress","setUsers","changePage"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/components/main-content/components/layout/pages/users/UsersContainer.tsx"],"sourcesContent":["import { connect } from 'react-redux';\nimport { IState } from '../../../../models/state.interface';\nimport { IUser } from '../../../../models/user.interface';\nimport React from 'react';\nimport Users from './Users';\nimport {\n  SetUsersAC,\n  SetCurrentPageAC\n} from '../../../../../../redux/actions/actions';\nimport {\n  requestUsersTC,\n  subscribeUsersTC,\n  unsubscribeUsersTC\n} from '../../../../../../redux/thunk/users-thunk';\nimport { withAuthRedirect } from '../../../../../shared/redirect/RedirectComponents';\nimport { compose } from '@reduxjs/toolkit';\nimport {\n  getCurrentPage,\n  getFollowingInProgress,\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsers\n} from '../../../../../../redux/selectors/users.selector';\n\ninterface IUsersContainerProps {\n  users: IUser[];\n  pageSize: number;\n  totalUsersCount: number;\n  isAuth: boolean;\n  currentPage: number;\n  isFetching: boolean;\n  followingInProgress: number[];\n  setUsers: (users: IUser[]) => void;\n  changePage: (pageNumber: number) => void;\n  getUsersTC: (users: string, page: string, pageSize: string) => void;\n  subscribeUsersTC: (userId: number) => void;\n  unsubscribeUsersTC: (userId: number) => void;\n}\n\nclass UsersContainer extends React.Component<IUsersContainerProps> {\n  componentDidMount(): void {\n    const users = '/users';\n    const page = `?page=${this.props.currentPage}`;\n    const pageSize = `&count=${this.props.pageSize}`;\n    this.props.getUsersTC(users, page, pageSize);\n  }\n\n  render(): React.ReactNode {\n    return <Users {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUsers: SetUsersAC,\n    changePage: SetCurrentPageAC,\n    getUsersTC: requestUsersTC,\n    subscribeUsersTC: subscribeUsersTC,\n    unsubscribeUsersTC: unsubscribeUsersTC\n  }),\n  withAuthRedirect\n)(UsersContainer);\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AAGrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SACEC,UAAU,EACVC,gBAAgB,QACX,yCAAyC;AAChD,SACEC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,QACb,2CAA2C;AAClD,SAASC,gBAAgB,QAAQ,mDAAmD;AACpF,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SACEC,cAAc,EACdC,sBAAsB,EACtBC,aAAa,EACbC,WAAW,EACXC,kBAAkB,EAClBC,QAAQ,QACH,kDAAkD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB1D,MAAMC,cAAc,SAASjB,KAAK,CAACkB,SAAS,CAAuB;EACjEC,iBAAiBA,CAAA,EAAS;IACxB,MAAMC,KAAK,GAAG,QAAQ;IACtB,MAAMC,IAAI,GAAI,SAAQ,IAAI,CAACC,KAAK,CAACC,WAAY,EAAC;IAC9C,MAAMC,QAAQ,GAAI,UAAS,IAAI,CAACF,KAAK,CAACE,QAAS,EAAC;IAChD,IAAI,CAACF,KAAK,CAACG,UAAU,CAACL,KAAK,EAAEC,IAAI,EAAEG,QAAQ,CAAC;EAC9C;EAEAE,MAAMA,CAAA,EAAoB;IACxB,oBAAOV,OAAA,CAACf,KAAK;MAAA,GAAK,IAAI,CAACqB;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;AACF;AAEA,MAAMC,eAAe,GAAIC,KAAa,IAAK;EACzC,OAAO;IACLZ,KAAK,EAAEN,QAAQ,CAACkB,KAAK,CAAC;IACtBR,QAAQ,EAAEZ,WAAW,CAACoB,KAAK,CAAC;IAC5BC,eAAe,EAAEpB,kBAAkB,CAACmB,KAAK,CAAC;IAC1CT,WAAW,EAAEd,cAAc,CAACuB,KAAK,CAAC;IAClCE,UAAU,EAAEvB,aAAa,CAACqB,KAAK,CAAC;IAChCG,mBAAmB,EAAEzB,sBAAsB,CAACsB,KAAK;EACnD,CAAC;AACH,CAAC;AAED,eAAexB,OAAO,CACpBT,OAAO,CAACgC,eAAe,EAAE;EACvBK,QAAQ,EAAElC,UAAU;EACpBmC,UAAU,EAAElC,gBAAgB;EAC5BsB,UAAU,EAAErB,cAAc;EAC1BC,gBAAgB,EAAEA,gBAAgB;EAClCC,kBAAkB,EAAEA;AACtB,CAAC,CAAC,EACFC,gBACF,CAAC,CAACU,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}