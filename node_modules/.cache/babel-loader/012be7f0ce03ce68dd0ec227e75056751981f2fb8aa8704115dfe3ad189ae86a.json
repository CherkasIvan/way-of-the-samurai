{"ast":null,"code":"import { ActiveMessages } from '../../utils/data/active-messages';\nimport { ActiveUsers } from '../../utils/data/active-users';\nimport { StoreEnum } from '../../utils/enums/store.enum';\nconst initialState = {\n  users: ActiveUsers,\n  messages: ActiveMessages\n};\nconst dialogsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case StoreEnum.ADD_MESSAGE:\n      {\n        const actualMessage = {\n          id: state.messages.length + 1,\n          message: action.payload\n        };\n        const stateCopy = {\n          ...state,\n          messages: [...state.messages]\n        };\n        stateCopy.messages.push(actualMessage);\n        return stateCopy;\n      }\n    default:\n      return state;\n  }\n};\nexport default dialogsReducer;","map":{"version":3,"names":["ActiveMessages","ActiveUsers","StoreEnum","initialState","users","messages","dialogsReducer","state","arguments","length","undefined","action","type","ADD_MESSAGE","actualMessage","id","message","payload","stateCopy","push"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/redux/reducers/dialogs-reducer.ts"],"sourcesContent":["import { IMessage } from '../../components/main-content/models/message.interface';\nimport { ActiveMessages } from '../../utils/data/active-messages';\nimport { ActiveUsers } from '../../utils/data/active-users';\nimport { StoreEnum } from '../../utils/enums/store.enum';\nimport { IAction } from '../../utils/models/action.interface';\nimport { IDialogsPage } from '../../utils/models/dialogs-page.interface';\n\nconst initialState: IDialogsPage = {\n  users: ActiveUsers,\n  messages: ActiveMessages\n};\n\nconst dialogsReducer = (\n  state: IDialogsPage = initialState,\n  action: IAction\n): IDialogsPage => {\n  switch (action.type) {\n    case StoreEnum.ADD_MESSAGE: {\n      const actualMessage: IMessage = {\n        id: state.messages.length + 1,\n        message: action.payload\n      };\n      const stateCopy = {\n        ...state,\n        messages: [...state.messages]\n      };\n      stateCopy.messages.push(actualMessage);\n      return stateCopy;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default dialogsReducer;\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,kCAAkC;AACjE,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,SAAS,QAAQ,8BAA8B;AAIxD,MAAMC,YAA0B,GAAG;EACjCC,KAAK,EAAEH,WAAW;EAClBI,QAAQ,EAAEL;AACZ,CAAC;AAED,MAAMM,cAAc,GAAG,SAAAA,CAAA,EAGJ;EAAA,IAFjBC,KAAmB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAClCQ,MAAe,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEf,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKV,SAAS,CAACW,WAAW;MAAE;QAC1B,MAAMC,aAAuB,GAAG;UAC9BC,EAAE,EAAER,KAAK,CAACF,QAAQ,CAACI,MAAM,GAAG,CAAC;UAC7BO,OAAO,EAAEL,MAAM,CAACM;QAClB,CAAC;QACD,MAAMC,SAAS,GAAG;UAChB,GAAGX,KAAK;UACRF,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ;QAC9B,CAAC;QACDa,SAAS,CAACb,QAAQ,CAACc,IAAI,CAACL,aAAa,CAAC;QACtC,OAAOI,SAAS;MAClB;IACA;MACE,OAAOX,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}