{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _mapValues from \"lodash/mapValues\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport prefixName from './util/prefixName';\nimport { withReduxForm } from './ReduxFormContext';\nexport default function createValues(_ref) {\n  var getIn = _ref.getIn;\n  return function (firstArg) {\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    // create a class that reads current form name and creates a selector\n    // return\n    return function (Component) {\n      var FormValues = /*#__PURE__*/function (_React$Component) {\n        _inheritsLoose(FormValues, _React$Component);\n        function FormValues(props) {\n          var _this;\n          _this = _React$Component.call(this, props) || this;\n          if (!props._reduxForm) {\n            throw new Error('formValues() must be used inside a React tree decorated with reduxForm()');\n          }\n          _this.updateComponent(props);\n          return _this;\n        }\n        var _proto = FormValues.prototype;\n        _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(props) {\n          if (typeof firstArg === 'function') {\n            this.updateComponent(props);\n          }\n        };\n        _proto.render = function render() {\n          var Component = this.Component;\n          return /*#__PURE__*/React.createElement(Component // so that the connected component updates props when sectionPrefix has changed\n          , _extends({\n            sectionPrefix: this.props._reduxForm.sectionPrefix\n          }, this.props));\n        };\n        _proto.updateComponent = function updateComponent(props) {\n          var valuesMap;\n          var resolvedFirstArg = typeof firstArg === 'function' ? firstArg(props) : firstArg;\n          if (typeof resolvedFirstArg === 'string') {\n            var _rest$reduce;\n            valuesMap = rest.reduce(function (result, k) {\n              result[k] = k;\n              return result;\n            }, (_rest$reduce = {}, _rest$reduce[resolvedFirstArg] = resolvedFirstArg, _rest$reduce));\n          } else {\n            valuesMap = resolvedFirstArg;\n          }\n          if (_isEmpty(valuesMap)) {\n            // maybe that empty valuesMap is ok if firstArg is a function?\n            // if this is the case, we probably should set this.Component = Component\n            throw new Error('formValues(): You must specify values to get as formValues(name1, name2, ...) or formValues({propName1: propPath1, ...}) or formValues((props) => name) or formValues((props) => ({propName1: propPath1, ...}))');\n          }\n          if (_isEqual(valuesMap, this._valuesMap)) {\n            // no change in valuesMap\n            return;\n          }\n          this._valuesMap = valuesMap;\n          this.setComponent();\n        };\n        _proto.setComponent = function setComponent() {\n          var _this2 = this;\n          var formValuesSelector = function formValuesSelector(_, _ref2) {\n            var sectionPrefix = _ref2.sectionPrefix;\n            // Yes, we're only using connect() for listening to updates.\n            // The second argument needs to be there so that connect calls\n            // the selector when props change\n            var getValues = _this2.props._reduxForm.getValues;\n            var values = getValues();\n            return _mapValues(_this2._valuesMap, function (path) {\n              return getIn(values, prefixName(_this2.props, path));\n            });\n          };\n          this.Component = connect(formValuesSelector, function () {\n            return {};\n          } // ignore dispatch\n          )(function (_ref3) {\n            var sectionPrefix = _ref3.sectionPrefix,\n              otherProps = _objectWithoutPropertiesLoose(_ref3, [\"sectionPrefix\"]);\n            return /*#__PURE__*/React.createElement(Component, otherProps);\n          });\n        };\n        return FormValues;\n      }(React.Component);\n      return withReduxForm(FormValues);\n    };\n  };\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_inheritsLoose","_mapValues","_isEqual","_isEmpty","React","connect","prefixName","withReduxForm","createValues","_ref","getIn","firstArg","_len","arguments","length","rest","Array","_key","Component","FormValues","_React$Component","props","_this","call","_reduxForm","Error","updateComponent","_proto","prototype","UNSAFE_componentWillReceiveProps","render","createElement","sectionPrefix","valuesMap","resolvedFirstArg","_rest$reduce","reduce","result","k","_valuesMap","setComponent","_this2","formValuesSelector","_","_ref2","getValues","values","path","_ref3","otherProps"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/node_modules/redux-form/es/createFormValues.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _mapValues from \"lodash/mapValues\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport prefixName from './util/prefixName';\nimport { withReduxForm } from './ReduxFormContext';\nexport default function createValues(_ref) {\n  var getIn = _ref.getIn;\n  return function (firstArg) {\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    // create a class that reads current form name and creates a selector\n    // return\n    return function (Component) {\n      var FormValues = /*#__PURE__*/function (_React$Component) {\n        _inheritsLoose(FormValues, _React$Component);\n\n        function FormValues(props) {\n          var _this;\n\n          _this = _React$Component.call(this, props) || this;\n\n          if (!props._reduxForm) {\n            throw new Error('formValues() must be used inside a React tree decorated with reduxForm()');\n          }\n\n          _this.updateComponent(props);\n\n          return _this;\n        }\n\n        var _proto = FormValues.prototype;\n\n        _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(props) {\n          if (typeof firstArg === 'function') {\n            this.updateComponent(props);\n          }\n        };\n\n        _proto.render = function render() {\n          var Component = this.Component;\n          return /*#__PURE__*/React.createElement(Component // so that the connected component updates props when sectionPrefix has changed\n          , _extends({\n            sectionPrefix: this.props._reduxForm.sectionPrefix\n          }, this.props));\n        };\n\n        _proto.updateComponent = function updateComponent(props) {\n          var valuesMap;\n          var resolvedFirstArg = typeof firstArg === 'function' ? firstArg(props) : firstArg;\n\n          if (typeof resolvedFirstArg === 'string') {\n            var _rest$reduce;\n\n            valuesMap = rest.reduce(function (result, k) {\n              result[k] = k;\n              return result;\n            }, (_rest$reduce = {}, _rest$reduce[resolvedFirstArg] = resolvedFirstArg, _rest$reduce));\n          } else {\n            valuesMap = resolvedFirstArg;\n          }\n\n          if (_isEmpty(valuesMap)) {\n            // maybe that empty valuesMap is ok if firstArg is a function?\n            // if this is the case, we probably should set this.Component = Component\n            throw new Error('formValues(): You must specify values to get as formValues(name1, name2, ...) or formValues({propName1: propPath1, ...}) or formValues((props) => name) or formValues((props) => ({propName1: propPath1, ...}))');\n          }\n\n          if (_isEqual(valuesMap, this._valuesMap)) {\n            // no change in valuesMap\n            return;\n          }\n\n          this._valuesMap = valuesMap;\n          this.setComponent();\n        };\n\n        _proto.setComponent = function setComponent() {\n          var _this2 = this;\n\n          var formValuesSelector = function formValuesSelector(_, _ref2) {\n            var sectionPrefix = _ref2.sectionPrefix;\n            // Yes, we're only using connect() for listening to updates.\n            // The second argument needs to be there so that connect calls\n            // the selector when props change\n            var getValues = _this2.props._reduxForm.getValues;\n            var values = getValues();\n            return _mapValues(_this2._valuesMap, function (path) {\n              return getIn(values, prefixName(_this2.props, path));\n            });\n          };\n\n          this.Component = connect(formValuesSelector, function () {\n            return {};\n          } // ignore dispatch\n          )(function (_ref3) {\n            var sectionPrefix = _ref3.sectionPrefix,\n                otherProps = _objectWithoutPropertiesLoose(_ref3, [\"sectionPrefix\"]);\n\n            return /*#__PURE__*/React.createElement(Component, otherProps);\n          });\n        };\n\n        return FormValues;\n      }(React.Component);\n\n      return withReduxForm(FormValues);\n    };\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}