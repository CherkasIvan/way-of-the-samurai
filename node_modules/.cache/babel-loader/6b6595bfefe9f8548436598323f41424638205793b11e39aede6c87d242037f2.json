{"ast":null,"code":"import { StoreEnum } from '../../utils/enums/store.enum';\nconst initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case StoreEnum.SET_USER_DATA:\n      {\n        return {\n          ...state,\n          ...action.payload\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["StoreEnum","initialState","userId","email","login","isAuth","authReducer","state","arguments","length","undefined","action","type","SET_USER_DATA","payload"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/redux/reducers/auth-reducer.ts"],"sourcesContent":["import { StoreEnum } from '../../utils/enums/store.enum';\nimport { IAction } from '../../utils/models/action.interface';\nimport { IAuth } from '../../utils/models/auth.interface';\n\nconst initialState: IAuth = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state: IAuth = initialState, action: IAction): IAuth => {\n  switch (action.type) {\n    case StoreEnum.SET_USER_DATA: {\n      return {\n        ...state,\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,8BAA8B;AAIxD,MAAMC,YAAmB,GAAG;EAC1BC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAyD;EAAA,IAAxDC,KAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAe,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/D,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKZ,SAAS,CAACa,aAAa;MAAE;QAC5B,OAAO;UACL,GAAGN,KAAK;UACR,GAAGI,MAAM,CAACG;QACZ,CAAC;MACH;IACA;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}