{"ast":null,"code":"var _jsxFileName = \"/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/components/shared/add-post/AddTextAreaPost.tsx\";\nimport React from 'react';\nimport classes from './AddTextAreaPost.module.scss';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, requiredField } from '../../../utils/validators/validators';\nimport { Textarea } from '../forms-controls/FormsControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst required = requiredField;\nconst maxLength10 = maxLengthCreator(10);\nconst AddTextAreaPost = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.AddPostContainer,\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      type: \"textarea\",\n      placeholder: 'ADD POST',\n      name: 'newPostBody',\n      component: Textarea,\n      validate: [required, maxLength10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = AddTextAreaPost;\nconst AddTextAreaPostReduxForm = reduxForm({\n  form: 'addTextAreaPost'\n})(AddTextAreaPost);\nexport default AddTextAreaPostReduxForm;\nvar _c;\n$RefreshReg$(_c, \"AddTextAreaPost\");","map":{"version":3,"names":["React","classes","Field","reduxForm","maxLengthCreator","requiredField","Textarea","jsxDEV","_jsxDEV","required","maxLength10","AddTextAreaPost","props","className","AddPostContainer","onSubmit","handleSubmit","children","type","placeholder","name","component","validate","fileName","_jsxFileName","lineNumber","columnNumber","_c","AddTextAreaPostReduxForm","form","$RefreshReg$"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/components/shared/add-post/AddTextAreaPost.tsx"],"sourcesContent":["import React from 'react';\nimport classes from './AddTextAreaPost.module.scss';\nimport { Field, reduxForm } from 'redux-form';\nimport {\n  maxLengthCreator,\n  requiredField\n} from '../../../utils/validators/validators';\nimport { FormControl, Textarea } from '../forms-controls/FormsControls';\n\nconst required = requiredField;\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddTextAreaPost = (props: {\n  handleSubmit: React.FormEventHandler<HTMLFormElement> | undefined;\n}) => {\n  return (\n    <form\n      className={classes.AddPostContainer}\n      onSubmit={props.handleSubmit}>\n      <Field\n        type=\"textarea\"\n        placeholder={'ADD POST'}\n        name={'newPostBody'}\n        component={Textarea}\n        validate={[required, maxLength10]}></Field>\n      <button>Add new post</button>\n    </form>\n  );\n};\n\nconst AddTextAreaPostReduxForm = reduxForm({ form: 'addTextAreaPost' })(\n  AddTextAreaPost\n);\nexport default AddTextAreaPostReduxForm;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,+BAA+B;AACnD,SAASC,KAAK,EAAEC,SAAS,QAAQ,YAAY;AAC7C,SACEC,gBAAgB,EAChBC,aAAa,QACR,sCAAsC;AAC7C,SAAsBC,QAAQ,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,QAAQ,GAAGJ,aAAa;AAC9B,MAAMK,WAAW,GAAGN,gBAAgB,CAAC,EAAE,CAAC;AAExC,MAAMO,eAAe,GAAIC,KAExB,IAAK;EACJ,oBACEJ,OAAA;IACEK,SAAS,EAAEZ,OAAO,CAACa,gBAAiB;IACpCC,QAAQ,EAAEH,KAAK,CAACI,YAAa;IAAAC,QAAA,gBAC7BT,OAAA,CAACN,KAAK;MACJgB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAE,UAAW;MACxBC,IAAI,EAAE,aAAc;MACpBC,SAAS,EAAEf,QAAS;MACpBgB,QAAQ,EAAE,CAACb,QAAQ,EAAEC,WAAW;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7ClB,OAAA;MAAAS,QAAA,EAAQ;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEX,CAAC;AAACC,EAAA,GAhBIhB,eAAe;AAkBrB,MAAMiB,wBAAwB,GAAGzB,SAAS,CAAC;EAAE0B,IAAI,EAAE;AAAkB,CAAC,CAAC,CACrElB,eACF,CAAC;AACD,eAAeiB,wBAAwB;AAAC,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}