{"ast":null,"code":"export default function createIsPristine(_ref) {\n  var deepEqual = _ref.deepEqual,\n    empty = _ref.empty,\n    getIn = _ref.getIn;\n  return function (form, getFormState) {\n    return function (state) {\n      var nonNullGetFormState = getFormState || function (state) {\n        return getIn(state, 'form');\n      };\n      var formState = nonNullGetFormState(state);\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n      if (fields && fields.length) {\n        return fields.every(function (field) {\n          var fieldInitial = getIn(formState, form + \".initial.\" + field);\n          var fieldValue = getIn(formState, form + \".values.\" + field);\n          return deepEqual(fieldInitial, fieldValue);\n        });\n      }\n      var initial = getIn(formState, form + \".initial\") || empty;\n      var values = getIn(formState, form + \".values\") || initial;\n      return deepEqual(initial, values);\n    };\n  };\n}","map":{"version":3,"names":["createIsPristine","_ref","deepEqual","empty","getIn","form","getFormState","state","nonNullGetFormState","formState","_len","arguments","length","fields","Array","_key","every","field","fieldInitial","fieldValue","initial","values"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/node_modules/redux-form/es/selectors/isPristine.js"],"sourcesContent":["export default function createIsPristine(_ref) {\n  var deepEqual = _ref.deepEqual,\n      empty = _ref.empty,\n      getIn = _ref.getIn;\n  return function (form, getFormState) {\n    return function (state) {\n      var nonNullGetFormState = getFormState || function (state) {\n        return getIn(state, 'form');\n      };\n\n      var formState = nonNullGetFormState(state);\n\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      if (fields && fields.length) {\n        return fields.every(function (field) {\n          var fieldInitial = getIn(formState, form + \".initial.\" + field);\n          var fieldValue = getIn(formState, form + \".values.\" + field);\n          return deepEqual(fieldInitial, fieldValue);\n        });\n      }\n\n      var initial = getIn(formState, form + \".initial\") || empty;\n      var values = getIn(formState, form + \".values\") || initial;\n      return deepEqual(initial, values);\n    };\n  };\n}"],"mappings":"AAAA,eAAe,SAASA,gBAAgBA,CAACC,IAAI,EAAE;EAC7C,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAAS;IAC1BC,KAAK,GAAGF,IAAI,CAACE,KAAK;IAClBC,KAAK,GAAGH,IAAI,CAACG,KAAK;EACtB,OAAO,UAAUC,IAAI,EAAEC,YAAY,EAAE;IACnC,OAAO,UAAUC,KAAK,EAAE;MACtB,IAAIC,mBAAmB,GAAGF,YAAY,IAAI,UAAUC,KAAK,EAAE;QACzD,OAAOH,KAAK,CAACG,KAAK,EAAE,MAAM,CAAC;MAC7B,CAAC;MAED,IAAIE,SAAS,GAAGD,mBAAmB,CAACD,KAAK,CAAC;MAE1C,KAAK,IAAIG,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,MAAM,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;QAC5GF,MAAM,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;MACpC;MAEA,IAAIF,MAAM,IAAIA,MAAM,CAACD,MAAM,EAAE;QAC3B,OAAOC,MAAM,CAACG,KAAK,CAAC,UAAUC,KAAK,EAAE;UACnC,IAAIC,YAAY,GAAGd,KAAK,CAACK,SAAS,EAAEJ,IAAI,GAAG,WAAW,GAAGY,KAAK,CAAC;UAC/D,IAAIE,UAAU,GAAGf,KAAK,CAACK,SAAS,EAAEJ,IAAI,GAAG,UAAU,GAAGY,KAAK,CAAC;UAC5D,OAAOf,SAAS,CAACgB,YAAY,EAAEC,UAAU,CAAC;QAC5C,CAAC,CAAC;MACJ;MAEA,IAAIC,OAAO,GAAGhB,KAAK,CAACK,SAAS,EAAEJ,IAAI,GAAG,UAAU,CAAC,IAAIF,KAAK;MAC1D,IAAIkB,MAAM,GAAGjB,KAAK,CAACK,SAAS,EAAEJ,IAAI,GAAG,SAAS,CAAC,IAAIe,OAAO;MAC1D,OAAOlB,SAAS,CAACkB,OAAO,EAAEC,MAAM,CAAC;IACnC,CAAC;EACH,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}