{"ast":null,"code":"import invariant from 'invariant';\nimport plain from './structure/plain';\nexport default function createFormValueSelector(_ref) {\n  var getIn = _ref.getIn;\n  return function (form, getFormState) {\n    invariant(form, 'Form value must be specified');\n    var nonNullGetFormState = getFormState || function (state) {\n      return getIn(state, 'form');\n    };\n    return function (state) {\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n      invariant(fields.length, 'No fields specified');\n      return fields.length === 1 ?\n      // only selecting one field, so return its value\n      getIn(nonNullGetFormState(state), form + \".values.\" + fields[0]) :\n      // selecting many fields, so return an object of field values\n      fields.reduce(function (accumulator, field) {\n        var value = getIn(nonNullGetFormState(state), form + \".values.\" + field);\n        return value === undefined ? accumulator : plain.setIn(accumulator, field, value);\n      }, {});\n    };\n  };\n}","map":{"version":3,"names":["invariant","plain","createFormValueSelector","_ref","getIn","form","getFormState","nonNullGetFormState","state","_len","arguments","length","fields","Array","_key","reduce","accumulator","field","value","undefined","setIn"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/node_modules/redux-form/es/createFormValueSelector.js"],"sourcesContent":["import invariant from 'invariant';\nimport plain from './structure/plain';\nexport default function createFormValueSelector(_ref) {\n  var getIn = _ref.getIn;\n  return function (form, getFormState) {\n    invariant(form, 'Form value must be specified');\n\n    var nonNullGetFormState = getFormState || function (state) {\n      return getIn(state, 'form');\n    };\n\n    return function (state) {\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      invariant(fields.length, 'No fields specified');\n      return fields.length === 1 ? // only selecting one field, so return its value\n      getIn(nonNullGetFormState(state), form + \".values.\" + fields[0]) : // selecting many fields, so return an object of field values\n      fields.reduce(function (accumulator, field) {\n        var value = getIn(nonNullGetFormState(state), form + \".values.\" + field);\n        return value === undefined ? accumulator : plain.setIn(accumulator, field, value);\n      }, {});\n    };\n  };\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,eAAe,SAASC,uBAAuBA,CAACC,IAAI,EAAE;EACpD,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACtB,OAAO,UAAUC,IAAI,EAAEC,YAAY,EAAE;IACnCN,SAAS,CAACK,IAAI,EAAE,8BAA8B,CAAC;IAE/C,IAAIE,mBAAmB,GAAGD,YAAY,IAAI,UAAUE,KAAK,EAAE;MACzD,OAAOJ,KAAK,CAACI,KAAK,EAAE,MAAM,CAAC;IAC7B,CAAC;IAED,OAAO,UAAUA,KAAK,EAAE;MACtB,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,MAAM,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;QAC5GF,MAAM,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;MACpC;MAEAd,SAAS,CAACY,MAAM,CAACD,MAAM,EAAE,qBAAqB,CAAC;MAC/C,OAAOC,MAAM,CAACD,MAAM,KAAK,CAAC;MAAG;MAC7BP,KAAK,CAACG,mBAAmB,CAACC,KAAK,CAAC,EAAEH,IAAI,GAAG,UAAU,GAAGO,MAAM,CAAC,CAAC,CAAC,CAAC;MAAG;MACnEA,MAAM,CAACG,MAAM,CAAC,UAAUC,WAAW,EAAEC,KAAK,EAAE;QAC1C,IAAIC,KAAK,GAAGd,KAAK,CAACG,mBAAmB,CAACC,KAAK,CAAC,EAAEH,IAAI,GAAG,UAAU,GAAGY,KAAK,CAAC;QACxE,OAAOC,KAAK,KAAKC,SAAS,GAAGH,WAAW,GAAGf,KAAK,CAACmB,KAAK,CAACJ,WAAW,EAAEC,KAAK,EAAEC,KAAK,CAAC;MACnF,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;EACH,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}