{"ast":null,"code":"var _jsxFileName = \"/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/components/main-content/components/layout/pages/profile/components/currentProfile/CurrentProfile.tsx\";\nimport React from 'react';\nimport classes from './CurrentProfile.module.scss';\nimport ProfileLogo from '../../../../../../../../assets/img/avatar.jpg';\nimport Preloader from '../../../../../../../shared/preloader/Preloader';\nimport ProfileStatusWithHooks from '../profileStatus/ProfileStatusWithHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentProfile = _ref => {\n  let {\n    profilePage,\n    updateMyStatusTC\n  } = _ref;\n  return profilePage.currentProfile ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.ProfileContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.UserContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: ProfileLogo,\n        alt: ProfileLogo,\n        className: classes.ProfileImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.ProfileName,\n        children: profilePage.currentProfile.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileStatusWithHooks, {\n        status: profilePage.status || 'Click here for change status',\n        updateMyStatusTC: updateMyStatusTC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Preloader, {\n    isFetching: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = CurrentProfile;\nexport default CurrentProfile;\nvar _c;\n$RefreshReg$(_c, \"CurrentProfile\");","map":{"version":3,"names":["React","classes","ProfileLogo","Preloader","ProfileStatusWithHooks","jsxDEV","_jsxDEV","CurrentProfile","_ref","profilePage","updateMyStatusTC","currentProfile","className","ProfileContainer","children","UserContainer","src","alt","ProfileImg","fileName","_jsxFileName","lineNumber","columnNumber","ProfileName","fullName","status","isFetching","_c","$RefreshReg$"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/components/main-content/components/layout/pages/profile/components/currentProfile/CurrentProfile.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport classes from './CurrentProfile.module.scss';\nimport ProfileLogo from '../../../../../../../../assets/img/avatar.jpg';\nimport Preloader from '../../../../../../../shared/preloader/Preloader';\nimport { IProfilePage } from '../../../../../../../../utils/models/profile-page.interface';\nimport ProfileStatusWithHooks from '../profileStatus/ProfileStatusWithHooks';\n\ninterface ICurrentProfileProps {\n  profilePage: IProfilePage;\n  updateMyStatusTC: (message: string) => any;\n}\n\nconst CurrentProfile: FC<ICurrentProfileProps> = ({\n  profilePage,\n  updateMyStatusTC\n}) => {\n  return profilePage.currentProfile ? (\n    <div className={classes.ProfileContainer}>\n      <div className={classes.UserContainer}>\n        <img\n          src={ProfileLogo}\n          alt={ProfileLogo}\n          className={classes.ProfileImg}></img>\n        <span className={classes.ProfileName}>\n          {profilePage.currentProfile.fullName}\n        </span>\n        <ProfileStatusWithHooks\n          status={profilePage.status || 'Click here for change status'}\n          updateMyStatusTC={updateMyStatusTC}\n        />\n      </div>\n    </div>\n  ) : (\n    <Preloader isFetching={true} />\n  );\n};\n\nexport default CurrentProfile;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,WAAW,MAAM,+CAA+C;AACvE,OAAOC,SAAS,MAAM,iDAAiD;AAEvE,OAAOC,sBAAsB,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO7E,MAAMC,cAAwC,GAAGC,IAAA,IAG3C;EAAA,IAH4C;IAChDC,WAAW;IACXC;EACF,CAAC,GAAAF,IAAA;EACC,OAAOC,WAAW,CAACE,cAAc,gBAC/BL,OAAA;IAAKM,SAAS,EAAEX,OAAO,CAACY,gBAAiB;IAAAC,QAAA,eACvCR,OAAA;MAAKM,SAAS,EAAEX,OAAO,CAACc,aAAc;MAAAD,QAAA,gBACpCR,OAAA;QACEU,GAAG,EAAEd,WAAY;QACjBe,GAAG,EAAEf,WAAY;QACjBU,SAAS,EAAEX,OAAO,CAACiB;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvChB,OAAA;QAAMM,SAAS,EAAEX,OAAO,CAACsB,WAAY;QAAAT,QAAA,EAClCL,WAAW,CAACE,cAAc,CAACa;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACPhB,OAAA,CAACF,sBAAsB;QACrBqB,MAAM,EAAEhB,WAAW,CAACgB,MAAM,IAAI,8BAA+B;QAC7Df,gBAAgB,EAAEA;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,gBAENhB,OAAA,CAACH,SAAS;IAACuB,UAAU,EAAE;EAAK;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAC/B;AACH,CAAC;AAACK,EAAA,GAvBIpB,cAAwC;AAyB9C,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}