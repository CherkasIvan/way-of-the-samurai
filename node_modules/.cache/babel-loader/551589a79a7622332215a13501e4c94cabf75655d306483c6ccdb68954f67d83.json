{"ast":null,"code":"import PropTypes from 'prop-types';\nvar any = PropTypes.any,\n  bool = PropTypes.bool,\n  func = PropTypes.func,\n  shape = PropTypes.shape,\n  string = PropTypes.string,\n  oneOfType = PropTypes.oneOfType,\n  object = PropTypes.object,\n  number = PropTypes.number;\nexport var formPropTypes = {\n  // State:\n  anyTouched: bool.isRequired,\n  // true if any of the fields have been marked as touched\n  asyncValidating: oneOfType([bool, string]).isRequired,\n  // true if async validation is running, a string if a field triggered async validation\n  dirty: bool.isRequired,\n  // true if any values are different from initialValues\n  error: any,\n  // form-wide error from '_error' key in validation result\n  form: string.isRequired,\n  // the name of the form\n  invalid: bool.isRequired,\n  // true if there are any validation errors\n  initialized: bool.isRequired,\n  // true if the form has been initialized\n  initialValues: object,\n  // the initialValues object passed to reduxForm\n  pristine: bool.isRequired,\n  // true if the values are the same as initialValues\n  pure: bool.isRequired,\n  // if true, implements shouldComponentUpdate\n  submitting: bool.isRequired,\n  // true if the form is in the process of being submitted\n  submitAsSideEffect: bool.isRequired,\n  // true if onSubmit result will be dispatched\n  submitFailed: bool.isRequired,\n  // true if the form was submitted and failed for any reason\n  submitSucceeded: bool.isRequired,\n  // true if the form was successfully submitted\n  valid: bool.isRequired,\n  // true if there are no validation errors\n  warning: any,\n  // form-wide warning from '_warning' key in validation result\n  // Actions:\n  array: shape({\n    insert: func.isRequired,\n    // function to insert a value into an array field\n    move: func.isRequired,\n    // function to move a value within an array field\n    pop: func.isRequired,\n    // function to pop a value off of an array field\n    push: func.isRequired,\n    // function to push a value onto an array field\n    remove: func.isRequired,\n    // function to remove a value from an array field\n    removeAll: func.isRequired,\n    // function to remove all the values from an array field\n    shift: func.isRequired,\n    // function to shift a value out of an array field\n    splice: func.isRequired,\n    // function to splice a value into an array field\n    swap: func.isRequired,\n    // function to swap values in an array field\n    unshift: func.isRequired // function to unshift a value into an array field\n  }),\n\n  asyncValidate: func.isRequired,\n  // function to trigger async validation\n  autofill: func.isRequired,\n  // action to set a value of a field and mark it as autofilled\n  blur: func.isRequired,\n  // action to mark a field as blurred\n  change: func.isRequired,\n  // action to change the value of a field\n  clearAsyncError: func.isRequired,\n  // action to clear the async error of a field\n  clearFields: func.isRequired,\n  // action to clean fields values for all fields\n  clearSubmitErrors: func.isRequired,\n  // action to remove submitErrors and error\n  destroy: func.isRequired,\n  // action to destroy the form's data in Redux\n  dispatch: func.isRequired,\n  // the Redux dispatch action\n  handleSubmit: func.isRequired,\n  // function to submit the form\n  initialize: func.isRequired,\n  // action to initialize form data\n  reset: func.isRequired,\n  // action to reset the form data to previously initialized values\n  resetSection: func.isRequired,\n  // action to reset the form sections data to previously initialized values\n  touch: func.isRequired,\n  // action to mark fields as touched\n  submit: func.isRequired,\n  // action to trigger a submission of the specified form\n  untouch: func.isRequired,\n  // action to mark fields as untouched\n  // triggerSubmit\n  triggerSubmit: bool,\n  // if true, submits the form on componentWillReceiveProps\n  clearSubmit: func.isRequired // called before a triggered submit, by default clears triggerSubmit\n};\n\nexport var fieldInputPropTypes = {\n  checked: bool,\n  name: string.isRequired,\n  onBlur: func.isRequired,\n  onChange: func.isRequired,\n  onDragStart: func.isRequired,\n  onDrop: func.isRequired,\n  onFocus: func.isRequired,\n  value: any\n};\nexport var fieldMetaPropTypes = {\n  active: bool.isRequired,\n  asyncValidating: bool.isRequired,\n  autofilled: bool.isRequired,\n  dirty: bool.isRequired,\n  dispatch: func.isRequired,\n  error: any,\n  form: string.isRequired,\n  invalid: bool.isRequired,\n  pristine: bool.isRequired,\n  submitting: bool.isRequired,\n  submitFailed: bool.isRequired,\n  touched: bool.isRequired,\n  valid: bool.isRequired,\n  visited: bool.isRequired,\n  warning: string\n};\nexport var fieldArrayMetaPropTypes = {\n  dirty: bool.isRequired,\n  error: any,\n  form: string.isRequired,\n  invalid: bool.isRequired,\n  pristine: bool.isRequired,\n  submitFailed: bool,\n  submitting: bool,\n  valid: bool.isRequired,\n  warning: string\n};\nexport var fieldArrayFieldsPropTypes = {\n  name: string.isRequired,\n  forEach: func.isRequired,\n  get: func.isRequired,\n  getAll: func.isRequired,\n  insert: func.isRequired,\n  length: number.isRequired,\n  map: func.isRequired,\n  move: func.isRequired,\n  pop: func.isRequired,\n  push: func.isRequired,\n  reduce: func.isRequired,\n  remove: func.isRequired,\n  removeAll: func.isRequired,\n  shift: func.isRequired,\n  swap: func.isRequired,\n  unshift: func.isRequired\n};\nexport var fieldPropTypes = {\n  input: shape(fieldInputPropTypes).isRequired,\n  meta: shape(fieldMetaPropTypes).isRequired\n};\nexport var fieldArrayPropTypes = {\n  fields: shape(fieldArrayFieldsPropTypes).isRequired,\n  meta: shape(fieldArrayMetaPropTypes).isRequired\n};\nexport default formPropTypes;","map":{"version":3,"names":["PropTypes","any","bool","func","shape","string","oneOfType","object","number","formPropTypes","anyTouched","isRequired","asyncValidating","dirty","error","form","invalid","initialized","initialValues","pristine","pure","submitting","submitAsSideEffect","submitFailed","submitSucceeded","valid","warning","array","insert","move","pop","push","remove","removeAll","shift","splice","swap","unshift","asyncValidate","autofill","blur","change","clearAsyncError","clearFields","clearSubmitErrors","destroy","dispatch","handleSubmit","initialize","reset","resetSection","touch","submit","untouch","triggerSubmit","clearSubmit","fieldInputPropTypes","checked","name","onBlur","onChange","onDragStart","onDrop","onFocus","value","fieldMetaPropTypes","active","autofilled","touched","visited","fieldArrayMetaPropTypes","fieldArrayFieldsPropTypes","forEach","get","getAll","length","map","reduce","fieldPropTypes","input","meta","fieldArrayPropTypes","fields"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/node_modules/redux-form/es/propTypes.js"],"sourcesContent":["import PropTypes from 'prop-types';\nvar any = PropTypes.any,\n    bool = PropTypes.bool,\n    func = PropTypes.func,\n    shape = PropTypes.shape,\n    string = PropTypes.string,\n    oneOfType = PropTypes.oneOfType,\n    object = PropTypes.object,\n    number = PropTypes.number;\nexport var formPropTypes = {\n  // State:\n  anyTouched: bool.isRequired,\n  // true if any of the fields have been marked as touched\n  asyncValidating: oneOfType([bool, string]).isRequired,\n  // true if async validation is running, a string if a field triggered async validation\n  dirty: bool.isRequired,\n  // true if any values are different from initialValues\n  error: any,\n  // form-wide error from '_error' key in validation result\n  form: string.isRequired,\n  // the name of the form\n  invalid: bool.isRequired,\n  // true if there are any validation errors\n  initialized: bool.isRequired,\n  // true if the form has been initialized\n  initialValues: object,\n  // the initialValues object passed to reduxForm\n  pristine: bool.isRequired,\n  // true if the values are the same as initialValues\n  pure: bool.isRequired,\n  // if true, implements shouldComponentUpdate\n  submitting: bool.isRequired,\n  // true if the form is in the process of being submitted\n  submitAsSideEffect: bool.isRequired,\n  // true if onSubmit result will be dispatched\n  submitFailed: bool.isRequired,\n  // true if the form was submitted and failed for any reason\n  submitSucceeded: bool.isRequired,\n  // true if the form was successfully submitted\n  valid: bool.isRequired,\n  // true if there are no validation errors\n  warning: any,\n  // form-wide warning from '_warning' key in validation result\n  // Actions:\n  array: shape({\n    insert: func.isRequired,\n    // function to insert a value into an array field\n    move: func.isRequired,\n    // function to move a value within an array field\n    pop: func.isRequired,\n    // function to pop a value off of an array field\n    push: func.isRequired,\n    // function to push a value onto an array field\n    remove: func.isRequired,\n    // function to remove a value from an array field\n    removeAll: func.isRequired,\n    // function to remove all the values from an array field\n    shift: func.isRequired,\n    // function to shift a value out of an array field\n    splice: func.isRequired,\n    // function to splice a value into an array field\n    swap: func.isRequired,\n    // function to swap values in an array field\n    unshift: func.isRequired // function to unshift a value into an array field\n\n  }),\n  asyncValidate: func.isRequired,\n  // function to trigger async validation\n  autofill: func.isRequired,\n  // action to set a value of a field and mark it as autofilled\n  blur: func.isRequired,\n  // action to mark a field as blurred\n  change: func.isRequired,\n  // action to change the value of a field\n  clearAsyncError: func.isRequired,\n  // action to clear the async error of a field\n  clearFields: func.isRequired,\n  // action to clean fields values for all fields\n  clearSubmitErrors: func.isRequired,\n  // action to remove submitErrors and error\n  destroy: func.isRequired,\n  // action to destroy the form's data in Redux\n  dispatch: func.isRequired,\n  // the Redux dispatch action\n  handleSubmit: func.isRequired,\n  // function to submit the form\n  initialize: func.isRequired,\n  // action to initialize form data\n  reset: func.isRequired,\n  // action to reset the form data to previously initialized values\n  resetSection: func.isRequired,\n  // action to reset the form sections data to previously initialized values\n  touch: func.isRequired,\n  // action to mark fields as touched\n  submit: func.isRequired,\n  // action to trigger a submission of the specified form\n  untouch: func.isRequired,\n  // action to mark fields as untouched\n  // triggerSubmit\n  triggerSubmit: bool,\n  // if true, submits the form on componentWillReceiveProps\n  clearSubmit: func.isRequired // called before a triggered submit, by default clears triggerSubmit\n\n};\nexport var fieldInputPropTypes = {\n  checked: bool,\n  name: string.isRequired,\n  onBlur: func.isRequired,\n  onChange: func.isRequired,\n  onDragStart: func.isRequired,\n  onDrop: func.isRequired,\n  onFocus: func.isRequired,\n  value: any\n};\nexport var fieldMetaPropTypes = {\n  active: bool.isRequired,\n  asyncValidating: bool.isRequired,\n  autofilled: bool.isRequired,\n  dirty: bool.isRequired,\n  dispatch: func.isRequired,\n  error: any,\n  form: string.isRequired,\n  invalid: bool.isRequired,\n  pristine: bool.isRequired,\n  submitting: bool.isRequired,\n  submitFailed: bool.isRequired,\n  touched: bool.isRequired,\n  valid: bool.isRequired,\n  visited: bool.isRequired,\n  warning: string\n};\nexport var fieldArrayMetaPropTypes = {\n  dirty: bool.isRequired,\n  error: any,\n  form: string.isRequired,\n  invalid: bool.isRequired,\n  pristine: bool.isRequired,\n  submitFailed: bool,\n  submitting: bool,\n  valid: bool.isRequired,\n  warning: string\n};\nexport var fieldArrayFieldsPropTypes = {\n  name: string.isRequired,\n  forEach: func.isRequired,\n  get: func.isRequired,\n  getAll: func.isRequired,\n  insert: func.isRequired,\n  length: number.isRequired,\n  map: func.isRequired,\n  move: func.isRequired,\n  pop: func.isRequired,\n  push: func.isRequired,\n  reduce: func.isRequired,\n  remove: func.isRequired,\n  removeAll: func.isRequired,\n  shift: func.isRequired,\n  swap: func.isRequired,\n  unshift: func.isRequired\n};\nexport var fieldPropTypes = {\n  input: shape(fieldInputPropTypes).isRequired,\n  meta: shape(fieldMetaPropTypes).isRequired\n};\nexport var fieldArrayPropTypes = {\n  fields: shape(fieldArrayFieldsPropTypes).isRequired,\n  meta: shape(fieldArrayMetaPropTypes).isRequired\n};\nexport default formPropTypes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}