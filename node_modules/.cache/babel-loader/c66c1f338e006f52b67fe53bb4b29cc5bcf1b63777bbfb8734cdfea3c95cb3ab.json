{"ast":null,"code":"import { StoreEnum } from '../../utils/enums/store.enum';\nexport const AddPostAC = message => ({\n  type: StoreEnum.ADD_POST,\n  payload: message\n});\n_c = AddPostAC;\nexport const AddMessageAC = message => ({\n  type: StoreEnum.ADD_MESSAGE,\n  payload: message\n});\n_c2 = AddMessageAC;\nexport const UserSubscribeAC = userId => ({\n  type: StoreEnum.USER_SUBSCRIBE,\n  payload: userId\n});\n_c3 = UserSubscribeAC;\nexport const UserUnsubscribeAC = userId => ({\n  type: StoreEnum.USER_UNSUBSCRIBE,\n  payload: userId\n});\n_c4 = UserUnsubscribeAC;\nexport const SetUsersAC = users => ({\n  type: StoreEnum.SET_USERS,\n  payload: users\n});\n_c5 = SetUsersAC;\nexport const SetProfileAC = profile => ({\n  type: StoreEnum.SET_PROFILE,\n  payload: profile\n});\n_c6 = SetProfileAC;\nexport const GetProfileStatusAC = profileStatus => ({\n  type: StoreEnum.GET_USERS_STATUS,\n  payload: profileStatus\n});\n_c7 = GetProfileStatusAC;\nexport const UpdateMyStatusAC = message => ({\n  type: StoreEnum.UPDATE_MY_STATUS,\n  payload: message\n});\n_c8 = UpdateMyStatusAC;\nexport const SetCurrentPageAC = currentPage => ({\n  type: StoreEnum.SET_CURRENT_PAGE,\n  payload: currentPage\n});\n_c9 = SetCurrentPageAC;\nexport const SetTotalUsersCountAC = totalUsersCount => ({\n  type: StoreEnum.SET_TOTAL_USERS_COUNT,\n  payload: totalUsersCount\n});\n_c10 = SetTotalUsersCountAC;\nexport const SetPreloaderAC = isFetching => ({\n  type: StoreEnum.TOGGLE_IS_FETCHING,\n  payload: isFetching\n});\n_c11 = SetPreloaderAC;\nexport const SetPreloaderInProgressAC = (isFetching, userId) => ({\n  type: StoreEnum.TOGGLE_IS_SUBSCRIBING_PROGRESS,\n  payload: {\n    isFetching,\n    userId\n  }\n});\n_c12 = SetPreloaderInProgressAC;\nexport const SetUserDataAC = (id, email, login, isAuth) => ({\n  type: StoreEnum.SET_USER_DATA,\n  payload: {\n    id,\n    email,\n    login,\n    isAuth\n  }\n});\n_c13 = SetUserDataAC;\nexport const SetAuthUserAC = (login, password, rememberMe) => ({\n  type: StoreEnum.SET_AUTH_USER,\n  payload: {\n    login,\n    password,\n    rememberMe\n  }\n});\n_c14 = SetAuthUserAC;\nexport const SetInitialized = initialized => ({\n  type: StoreEnum.SET_INITIALIZED,\n  payload: initialized\n});\n_c15 = SetInitialized;\nexport const InitializedSuccessAC = () => ({\n  type: StoreEnum.INITIALIZED_SUCCESS\n});\n_c16 = InitializedSuccessAC;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"AddPostAC\");\n$RefreshReg$(_c2, \"AddMessageAC\");\n$RefreshReg$(_c3, \"UserSubscribeAC\");\n$RefreshReg$(_c4, \"UserUnsubscribeAC\");\n$RefreshReg$(_c5, \"SetUsersAC\");\n$RefreshReg$(_c6, \"SetProfileAC\");\n$RefreshReg$(_c7, \"GetProfileStatusAC\");\n$RefreshReg$(_c8, \"UpdateMyStatusAC\");\n$RefreshReg$(_c9, \"SetCurrentPageAC\");\n$RefreshReg$(_c10, \"SetTotalUsersCountAC\");\n$RefreshReg$(_c11, \"SetPreloaderAC\");\n$RefreshReg$(_c12, \"SetPreloaderInProgressAC\");\n$RefreshReg$(_c13, \"SetUserDataAC\");\n$RefreshReg$(_c14, \"SetAuthUserAC\");\n$RefreshReg$(_c15, \"SetInitialized\");\n$RefreshReg$(_c16, \"InitializedSuccessAC\");","map":{"version":3,"names":["StoreEnum","AddPostAC","message","type","ADD_POST","payload","_c","AddMessageAC","ADD_MESSAGE","_c2","UserSubscribeAC","userId","USER_SUBSCRIBE","_c3","UserUnsubscribeAC","USER_UNSUBSCRIBE","_c4","SetUsersAC","users","SET_USERS","_c5","SetProfileAC","profile","SET_PROFILE","_c6","GetProfileStatusAC","profileStatus","GET_USERS_STATUS","_c7","UpdateMyStatusAC","UPDATE_MY_STATUS","_c8","SetCurrentPageAC","currentPage","SET_CURRENT_PAGE","_c9","SetTotalUsersCountAC","totalUsersCount","SET_TOTAL_USERS_COUNT","_c10","SetPreloaderAC","isFetching","TOGGLE_IS_FETCHING","_c11","SetPreloaderInProgressAC","TOGGLE_IS_SUBSCRIBING_PROGRESS","_c12","SetUserDataAC","id","email","login","isAuth","SET_USER_DATA","_c13","SetAuthUserAC","password","rememberMe","SET_AUTH_USER","_c14","SetInitialized","initialized","SET_INITIALIZED","_c15","InitializedSuccessAC","INITIALIZED_SUCCESS","_c16","$RefreshReg$"],"sources":["/home/INTEXSOFT/ivan.cherkas/PROJECTS/way-of-the-samurai/src/redux/actions/actions.ts"],"sourcesContent":["import { IAction } from './../../utils/models/action.interface';\nimport { StoreEnum } from '../../utils/enums/store.enum';\nimport { IUser } from '../../components/main-content/models/user.interface';\nimport { IProfileInformation } from '../../components/main-content/models/profile-information.interface';\n\nexport const AddPostAC = (message: string): IAction => ({\n  type: StoreEnum.ADD_POST,\n  payload: message\n});\n\nexport const AddMessageAC = (message: string): IAction => ({\n  type: StoreEnum.ADD_MESSAGE,\n  payload: message\n});\n\nexport const UserSubscribeAC = (userId: number): IAction => ({\n  type: StoreEnum.USER_SUBSCRIBE,\n  payload: userId\n});\n\nexport const UserUnsubscribeAC = (userId: number): IAction => ({\n  type: StoreEnum.USER_UNSUBSCRIBE,\n  payload: userId\n});\n\nexport const SetUsersAC = (users: IUser[]): IAction => ({\n  type: StoreEnum.SET_USERS,\n  payload: users\n});\n\nexport const SetProfileAC = (profile: IProfileInformation): IAction => ({\n  type: StoreEnum.SET_PROFILE,\n  payload: profile\n});\n\nexport const GetProfileStatusAC = (profileStatus: string): IAction => ({\n  type: StoreEnum.GET_USERS_STATUS,\n  payload: profileStatus\n});\n\nexport const UpdateMyStatusAC = (message: string): IAction => ({\n  type: StoreEnum.UPDATE_MY_STATUS,\n  payload: message\n});\n\nexport const SetCurrentPageAC = (currentPage: number): IAction => ({\n  type: StoreEnum.SET_CURRENT_PAGE,\n  payload: currentPage\n});\n\nexport const SetTotalUsersCountAC = (totalUsersCount: number): IAction => ({\n  type: StoreEnum.SET_TOTAL_USERS_COUNT,\n  payload: totalUsersCount\n});\n\nexport const SetPreloaderAC = (isFetching: boolean): IAction => ({\n  type: StoreEnum.TOGGLE_IS_FETCHING,\n  payload: isFetching\n});\n\nexport const SetPreloaderInProgressAC = (\n  isFetching: boolean,\n  userId: number\n): IAction => ({\n  type: StoreEnum.TOGGLE_IS_SUBSCRIBING_PROGRESS,\n  payload: { isFetching, userId }\n});\n\nexport const SetUserDataAC = (\n  id: number | null,\n  email: string | null,\n  login: string | null,\n  isAuth: boolean | null\n): IAction => ({\n  type: StoreEnum.SET_USER_DATA,\n  payload: { id, email, login, isAuth }\n});\n\nexport const SetAuthUserAC = (\n  login: string,\n  password: string,\n  rememberMe?: boolean\n): IAction => ({\n  type: StoreEnum.SET_AUTH_USER,\n  payload: { login, password, rememberMe }\n});\n\nexport const SetInitialized = (initialized: boolean): IAction => ({\n  type: StoreEnum.SET_INITIALIZED,\n  payload: initialized\n});\n\nexport const InitializedSuccessAC = (): IAction => ({\n  type: StoreEnum.INITIALIZED_SUCCESS\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}