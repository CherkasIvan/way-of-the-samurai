{"version":3,"file":"static/js/838.a7c37a96.chunk.js","mappings":"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","sources":["webpack://way-of-the-samurai/./src/components/main-content/components/layout/pages/login/components/LoginForm.module.scss?634e","components/main-content/components/layout/pages/login/components/LoginForm.tsx","components/main-content/components/layout/pages/login/Login.tsx","components/main-content/components/layout/pages/login/LoginContainer.tsx","webpack://way-of-the-samurai/./src/components/shared/forms-controls/FormsControls.module.scss?6ff3","components/shared/forms-controls/FormsControls.tsx","utils/validators/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Error\":\"LoginForm_Error__ejwbA\"};","import React, { FC } from 'react';\r\nimport styles from './LoginForm.module.scss';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../../../../../shared/forms-controls/FormsControls';\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField\r\n} from '../../../../../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength20 = maxLengthCreator(30);\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst required = requiredField;\r\n\r\nconst LoginForm = (props: any) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          type=\"text\"\r\n          placeholder={'EMAIL'}\r\n          name={'EMAIL'}\r\n          component={Input}\r\n          validate={[required, maxLength20]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          type=\"password\"\r\n          placeholder={'PASSWORD'}\r\n          name={'password'}\r\n          typeof={'password'}\r\n          component={Input}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          type=\"checkbox\"\r\n          component={'input'}\r\n          name={'rememberMe'}\r\n        />\r\n        <span>Remember me</span>\r\n      </div>\r\n      {props.error ? (\r\n        <div className={styles.Error}>{props.error}</div>\r\n      ) : undefined}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nexport default LoginReduxForm;\r\n","import React, { FC } from 'react';\r\nimport LoginReduxForm from './components/LoginForm';\r\nimport { ILoginPage } from '../../../../../../utils/models/login-page.interface';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { ActiveRoutes } from '../../../../../../utils/enums/active-routes.enum';\r\n\r\ninterface ILoginProps {\r\n  addMessageTextHandler: (message: string) => void;\r\n  loginPage: ILoginPage;\r\n  isAuth: boolean;\r\n  loginUser: (email: string, password: string, rememberMe: boolean) => void;\r\n  logoutUser: () => void;\r\n}\r\n\r\nconst Login: FC<ILoginProps> = ({ loginUser, isAuth }) => {\r\n  const onSubmit = (formData: any) => {\r\n    loginUser(formData.EMAIL, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Navigate to={ActiveRoutes.PROFILE}></Navigate>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { connect } from 'react-redux';\r\nimport { IState } from '../../../../models/state.interface';\r\nimport { AddMessageAC } from '../../../../../../redux/actions/actions';\r\nimport Login from './Login';\r\nimport { loginTC, logoutTC } from '../../../../../../redux/thunk/auth-thunk';\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    loginPage: state.loginPage,\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addMessageTextHandler: AddMessageAC,\r\n  loginUser: loginTC,\r\n  logoutUser: logoutTC\r\n})(Login);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"FormControl\":\"FormsControls_FormControl__aBk1v\",\"FormControlError\":\"FormsControls_FormControlError__qVc3I\"};","import React from 'react';\r\nimport styles from './FormsControls.module.scss';\r\n\r\nexport const FormControl = (props: any) => {\r\n  const hasError = props.meta.error && props.meta.touched;\r\n  return (\r\n    <div className={styles.FormControl}>\r\n      <div className={hasError ? styles.FormControlError : undefined}>\r\n        {props.children}\r\n      </div>\r\n      {hasError ? <span>{props.meta.error}</span> : undefined}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props: any) => {\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea\r\n        {...props.input}\r\n        placeholder={props.placeholder}></textarea>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props: any) => {\r\n  return (\r\n    <FormControl {...props}>\r\n      <input\r\n        {...props.input}\r\n        placeholder={props.placeholder}></input>\r\n    </FormControl>\r\n  );\r\n};\r\n","export const requiredField = (value: string) =>\r\n  value && value !== undefined ? undefined : 'Field is required';\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) =>\r\n  value && value.length > maxLength\r\n    ? `Field should be shorter then ${maxLength} symbols`\r\n    : undefined;\r\n"],"names":["maxLength20","maxLengthCreator","maxLength10","required","requiredField","reduxForm","form","props","_jsxs","onSubmit","handleSubmit","children","_jsx","Field","type","placeholder","name","component","Input","validate","typeof","error","className","styles","undefined","_ref","loginUser","isAuth","Navigate","to","ActiveRoutes","PROFILE","LoginReduxForm","formData","EMAIL","password","rememberMe","connect","state","loginPage","auth","addMessageTextHandler","AddMessageAC","loginTC","logoutUser","logoutTC","Login","FormControl","hasError","meta","touched","Textarea","_objectSpread","input","value","maxLength","length","concat"],"sourceRoot":""}