{"version":3,"file":"static/js/778.30523fda.chunk.js","mappings":"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","sources":["webpack://way-of-the-samurai/./src/components/main-content/components/layout/pages/profile/Profile.module.scss?0232","webpack://way-of-the-samurai/./src/components/main-content/components/layout/pages/profile/components/posts/post/Post.module.scss?36e5","webpack://way-of-the-samurai/./src/components/main-content/components/layout/pages/profile/components/profileInfo/ProfileInfo.module.scss?d59f","components/main-content/components/layout/pages/profile/components/profileInfo/ProfileInfo.tsx","assets/img/like.svg","components/main-content/components/layout/pages/profile/components/posts/post/Post.tsx","webpack://way-of-the-samurai/./src/components/main-content/components/layout/pages/profile/components/posts/Posts.module.scss?8352","webpack://way-of-the-samurai/./src/components/shared/add-post/AddTextAreaPost.module.scss?d339","components/shared/add-post/AddTextAreaPost.tsx","components/main-content/components/layout/pages/profile/components/posts/Posts.tsx","utils/hoc/withRouter/WithRouter.tsx","components/main-content/components/layout/pages/profile/components/posts/PostsContainer.tsx","webpack://way-of-the-samurai/./src/components/main-content/components/layout/pages/profile/components/currentProfile/CurrentProfile.module.scss?5b9d","components/main-content/components/layout/pages/profile/components/profileStatus/ProfileStatus.module.scss","components/main-content/components/layout/pages/profile/components/profileStatus/ProfileStatusWithHooks.tsx","components/main-content/components/layout/pages/profile/components/currentProfile/CurrentProfile.tsx","components/main-content/components/layout/pages/profile/Profile.tsx","components/main-content/components/layout/pages/profile/ProfileClassContainer.tsx","redux/thunk/profile-thunk.ts","webpack://way-of-the-samurai/./src/components/shared/forms-controls/FormsControls.module.scss?6ff3","components/shared/forms-controls/FormsControls.tsx","utils/validators/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileContainer\":\"Profile_profileContainer__38pOr\",\"CurrentProfile\":\"Profile_CurrentProfile__fE4Tj\"};","// extracted by mini-css-extract-plugin\nexport default {\"PostContainer\":\"Post_PostContainer__vsu5L\",\"ButtonContainer\":\"Post_ButtonContainer__imM8l\",\"PostUserLike\":\"Post_PostUserLike__m8s0H\",\"PostUserLikeLogo\":\"Post_PostUserLikeLogo__09MDi\",\"PostUserLikeCounter\":\"Post_PostUserLikeCounter__1Bwgb\"};","// extracted by mini-css-extract-plugin\nexport default {\"ProfileContainer\":\"ProfileInfo_ProfileContainer__lnWx+\",\"UserContainer\":\"ProfileInfo_UserContainer__xFaOU\",\"ProfileImg\":\"ProfileInfo_ProfileImg__3RTuA\",\"ProfileText\":\"ProfileInfo_ProfileText__g9a1r\"};","import React, { FC } from 'react';\r\nimport classes from './ProfileInfo.module.scss';\r\nimport ProfileLogo from '../../../../../../../../assets/img/avatar.jpg';\r\n\r\ninterface IProfileInfoProps {\r\n  message: string;\r\n  name: string;\r\n}\r\n\r\nconst ProfileInfo: FC<IProfileInfoProps> = ({ message, name }) => {\r\n  return (\r\n    <div className={classes.ProfileContainer}>\r\n      <div className={classes.UserContainer}>\r\n        <img\r\n          src={ProfileLogo}\r\n          alt={ProfileLogo}\r\n          className={classes.ProfileImg}></img>\r\n        <span className={classes.ProfileName}>{name}</span>\r\n      </div>\r\n      <p className={classes.ProfileText}>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLike(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 452.3\",\n    width: 2500,\n    height: 2208,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M474.6 44.4C449.4 15.8 414.4 0 376 0c-53.9 0-88.1 32.2-107.3 59.2-5 7-9.2 14-12.7 20.7-3.5-6.6-7.8-13.7-12.7-20.7C224.1 32.2 189.9 0 136 0 97.6 0 62.6 15.8 37.4 44.4 13.3 71.8 0 108.4 0 147.5c0 42.6 16.6 82.2 52.3 124.7 31.9 38 77.8 77.1 131 122.4 19.8 16.9 40.3 34.3 62.1 53.4l.7.6c2.8 2.5 6.4 3.7 9.9 3.7s7.1-1.2 9.9-3.7l.7-.6c21.8-19.1 42.3-36.5 62.1-53.4 53.2-45.3 99.1-84.4 131-122.4 35.7-42.5 52.3-82.1 52.3-124.7 0-39.1-13.3-75.7-37.4-103.1zM309.2 371.8c-17.1 14.6-34.7 29.5-53.2 45.6-18.5-16.1-36.1-31.1-53.2-45.6C98.7 283.1 30 224.5 30 147.5c0-31.8 10.6-61.4 29.9-83.2C79.3 42.2 106.4 30 136 30c41.1 0 67.7 25.3 82.8 46.6 13.5 19.1 20.6 38.3 23 45.7 2 6.2 7.8 10.4 14.3 10.4s12.3-4.2 14.3-10.4c2.4-7.4 9.5-26.6 23-45.7C308.3 55.3 334.9 30 376 30c29.6 0 56.7 12.2 76.1 34.3 19.3 21.9 29.9 51.4 29.9 83.2 0 77-68.7 135.6-172.8 224.3z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLike);\nexport default __webpack_public_path__ + \"static/media/like.8869ecd067d68fa3c00c596f1851a5b3.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, FC } from 'react';\r\nimport classes from './Post.module.scss';\r\nimport ProfileInfo from '../../profileInfo/ProfileInfo';\r\nimport LikeImg from '../../../../../../../../../assets/img/like.svg';\r\n\r\ninterface IPostProps {\r\n  message: string;\r\n  name: string;\r\n  id: number;\r\n  counter: number;\r\n}\r\n\r\nconst Post: FC<IPostProps> = ({ message, name, counter }) => {\r\n  const [count, setCount] = useState<number>(counter);\r\n\r\n  return (\r\n    <div className={classes.PostContainer}>\r\n      <ProfileInfo\r\n        message={message}\r\n        name={name}></ProfileInfo>\r\n\r\n      <div className={classes.ButtonContainer}>\r\n        <button\r\n          className={classes.PostUserLike}\r\n          onClick={() => setCount(Number(count + 1))}>\r\n          <img\r\n            src={LikeImg}\r\n            alt=\"like-logo.jpg\"\r\n            className={classes.PostUserLikeLogo}></img>\r\n        </button>\r\n        <span className={classes.PostUserLikeCounter}>{count}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsContainer\":\"Posts_postsContainer__nSI7q\",\"postsTitle\":\"Posts_postsTitle__DQDBw\"};","// extracted by mini-css-extract-plugin\nexport default {\"AddPostContainer\":\"AddTextAreaPost_AddPostContainer__rLcu3\"};","import React from 'react';\r\nimport classes from './AddTextAreaPost.module.scss';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField\r\n} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../forms-controls/FormsControls';\r\n\r\nconst required = requiredField;\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddTextAreaPost = (props: {\r\n  handleSubmit: React.FormEventHandler<HTMLFormElement> | undefined;\r\n}) => {\r\n  return (\r\n    <form\r\n      className={classes.AddPostContainer}\r\n      onSubmit={props.handleSubmit}>\r\n      <Field\r\n        type=\"textarea\"\r\n        placeholder={'ADD POST'}\r\n        name={'newPostBody'}\r\n        component={Textarea}\r\n        validate={[required, maxLength10]}></Field>\r\n      <button>Add new post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddTextAreaPostReduxForm = reduxForm({ form: 'newPostBody' })(\r\n  AddTextAreaPost\r\n);\r\nexport default AddTextAreaPostReduxForm;\r\n","import Post from '../../components/posts/post/Post';\r\nimport classes from './Posts.module.scss';\r\nimport { IPost } from '../../../../../../models/post.interface';\r\nimport AddTextAreaPostReduxForm from '../../../../../../../shared/add-post/AddTextAreaPost';\r\nimport React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\ninterface IPostProps {\r\n  postsData: IPost[];\r\n  addPost: (text: string) => void;\r\n}\r\n\r\nconst Posts: FC<IPostProps> = React.memo(({ postsData, addPost }) => {\r\n  const posts = postsData.map(\r\n    (el: IPost) => (\r\n      <Post\r\n        message={el.message}\r\n        name={el.name}\r\n        id={el.id}\r\n        counter={el.counter}\r\n        key={el.id}></Post>\r\n    ),\r\n    [postsData, addPost]\r\n  );\r\n\r\n  const handleSubmit = (formData: any) => {\r\n    addPost(formData.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsContainer}>\r\n      <p className={classes.postsTitle}>Here is my posts</p>\r\n      {posts}\r\n      <AddTextAreaPostReduxForm onSubmit={handleSubmit} />\r\n    </div>\r\n  );\r\n});\r\n\r\nPosts.propTypes = {\r\n  postsData: PropTypes.any,\r\n  addPost: PropTypes.any\r\n};\r\n\r\nPosts.displayName = 'Posts';\r\n\r\nexport default Posts;\r\n","import { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport const WithRouter = (Component: React.ElementType) => {\r\n  const ComponentWithRouterProp = (props: any) => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return ComponentWithRouterProp;\r\n};\r\n","import React, { FC } from 'react';\r\nimport Posts from './Posts';\r\nimport { IPost } from '../../../../../../models/post.interface';\r\n\r\ninterface IPostContainerProps {\r\n  postsData: IPost[];\r\n  addPostHandler: (text: string) => void;\r\n}\r\n\r\nconst PostsContainer: FC<IPostContainerProps> = ({\r\n  postsData,\r\n  addPostHandler\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Posts\r\n        postsData={postsData}\r\n        addPost={addPostHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ProfileContainer\":\"CurrentProfile_ProfileContainer__A3VIR\",\"UserContainer\":\"CurrentProfile_UserContainer__Iw1Pl\",\"ProfileImg\":\"CurrentProfile_ProfileImg__5j6fq\",\"ProfileText\":\"CurrentProfile_ProfileText__-fDub\"};","// extracted by mini-css-extract-plugin\nexport default {};","import React, { FC, useEffect, useState } from 'react';\r\nimport styles from './ProfileStatus.module.scss';\r\n\r\ninterface IProfileStatusProps {\r\n  status: string;\r\n  updateMyStatusTC: (message: string) => any;\r\n}\r\n\r\nconst ProfileStatusWithHooks: FC<IProfileStatusProps> = ({\r\n  status,\r\n  updateMyStatusTC\r\n}) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const [statusChange, setStatusChange] = useState<string>(status);\r\n\r\n  useEffect(() => {\r\n    setStatusChange(status);\r\n  }, [status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    updateMyStatusTC(statusChange);\r\n  };\r\n\r\n  const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setStatusChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode ? (\r\n        <div\r\n          onDoubleClick={activateEditMode}\r\n          className={styles.ProfileStatusContainer}>\r\n          <span className={styles.ProfileActualStatus}>{status}</span>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.ProfileInputContainer}>\r\n          <input\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={statusChange}\r\n            autoFocus={true}\r\n            className={styles.ProfileInput}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React, { FC } from 'react';\r\nimport classes from './CurrentProfile.module.scss';\r\nimport ProfileLogo from '../../../../../../../../assets/img/avatar.jpg';\r\nimport Preloader from '../../../../../../../shared/preloader/Preloader';\r\nimport { IProfilePage } from '../../../../../../../../utils/models/profile-page.interface';\r\nimport ProfileStatusWithHooks from '../profileStatus/ProfileStatusWithHooks';\r\n\r\ninterface ICurrentProfileProps {\r\n  profilePage: IProfilePage;\r\n  updateMyStatusTC: (message: string) => any;\r\n}\r\n\r\nconst CurrentProfile: FC<ICurrentProfileProps> = ({\r\n  profilePage,\r\n  updateMyStatusTC\r\n}) => {\r\n  return profilePage.currentProfile ? (\r\n    <div className={classes.ProfileContainer}>\r\n      <div className={classes.UserContainer}>\r\n        <img\r\n          src={ProfileLogo}\r\n          alt={ProfileLogo}\r\n          className={classes.ProfileImg}></img>\r\n        <span className={classes.ProfileName}>\r\n          {profilePage.currentProfile.fullName}\r\n        </span>\r\n        <ProfileStatusWithHooks\r\n          status={profilePage.status || 'Click here for change status'}\r\n          updateMyStatusTC={updateMyStatusTC}\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Preloader isFetching={true} />\r\n  );\r\n};\r\n\r\nexport default CurrentProfile;\r\n","import { FC } from 'react';\r\nimport classes from './Profile.module.scss';\r\nimport { IProfilePage } from '../../../../../../utils/models/profile-page.interface';\r\nimport PostsContainer from './components/posts/PostsContainer';\r\nimport CurrentProfile from './components/currentProfile/CurrentProfile';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { ActiveRoutes } from '../../../../../../utils/enums/active-routes.enum';\r\n\r\nexport interface IProfileProps {\r\n  profilePage: IProfilePage;\r\n  isAuth: boolean;\r\n  authorizedUserId: number;\r\n  addPostHandler: (text: string) => void;\r\n  updateMyStatusTC: (message: string) => any;\r\n}\r\n\r\nconst Profile: FC<IProfileProps> = ({\r\n  profilePage,\r\n  addPostHandler,\r\n  isAuth,\r\n  authorizedUserId,\r\n  updateMyStatusTC\r\n}) => {\r\n  return !isAuth && !authorizedUserId ? (\r\n    <Navigate to={ActiveRoutes.LOGIN} />\r\n  ) : (\r\n    <div className={classes.profileContainer}>\r\n      <div className={classes.CurrentProfile}>\r\n        <CurrentProfile\r\n          profilePage={profilePage}\r\n          updateMyStatusTC={updateMyStatusTC}\r\n        />\r\n      </div>\r\n      <PostsContainer\r\n        postsData={profilePage.posts}\r\n        addPostHandler={addPostHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import Profile from './Profile';\r\nimport { AddPostAC } from '../../../../../../redux/actions/actions';\r\nimport classes from './Profile.module.scss';\r\nimport { IState } from '../../../../models/state.interface';\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { IProfilePage } from '../../../../../../utils/models/profile-page.interface';\r\nimport { WithRouter } from '../../../../../../utils/hoc/withRouter/WithRouter';\r\nimport {\r\n  getProfileStatusTC,\r\n  getProfileTC,\r\n  updateMyStatusTC\r\n} from '../../../../../../redux/thunk/profile-thunk';\r\nimport { withAuthRedirect } from '../../../../../../utils/hoc/redirect/RedirectComponents';\r\n\r\ninterface IProfileClassContainerProps {\r\n  profilePage: IProfilePage;\r\n  isFetching: boolean;\r\n  isAuth: boolean;\r\n  authorizedUserId: number;\r\n  addPostHandler: (text: string) => void;\r\n  router: any;\r\n  getProfileTC: (router: any) => any;\r\n  getProfileStatusTC: (router: any) => any;\r\n  updateMyStatusTC: (message: string) => any;\r\n}\r\n\r\nclass ProfileClassContainer extends React.Component<IProfileClassContainerProps> {\r\n  componentDidMount(): void {\r\n    this.props.getProfileTC(this.props.router);\r\n    this.props.getProfileStatusTC(this.props.router);\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div className={classes.profileContainer}>\r\n        <Profile\r\n          {...this.props}\r\n          profilePage={this.props.profilePage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n    newPostText: state.profilePage.newPostText,\r\n    status: state.profilePage.status,\r\n    isFetching: state.usersPage.isFetching,\r\n    authorizedUserId: state.auth.userId\r\n  };\r\n};\r\n\r\n// SHOULD BE IMPLEMENTED\r\n// compose(\r\n//   connect(mapStateToProps, {\r\n//     updatePostHandler: UpdatePostAC,\r\n//     addPostHandler: AddPostAC,\r\n//     getProfileTC: getProfileTC,\r\n//   }),\r\n//   WithRouter,\r\n//   withAuthRedirect,\r\n// )(ProfileClassContainer)\r\n\r\nconst AuthRedirectComponent = withAuthRedirect(ProfileClassContainer);\r\n\r\nconst WithUrlDataContainerComponent = WithRouter(AuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps, {\r\n  addPostHandler: AddPostAC,\r\n  getProfileTC: getProfileTC,\r\n  getProfileStatusTC: getProfileStatusTC,\r\n  updateMyStatusTC: updateMyStatusTC\r\n})(WithUrlDataContainerComponent);\r\n","import { profileApi } from '../../api/api';\r\nimport { IAction } from '../../utils/models/action.interface';\r\nimport {\r\n  GetProfileStatusAC,\r\n  SetPreloaderAC,\r\n  SetProfileAC,\r\n  UpdateMyStatusAC\r\n} from '../actions/actions';\r\n\r\ntype IDispatch = (arg: IAction) => IAction;\r\n\r\nexport const getProfileTC = (router: any) => {\r\n  return (dispatch: IDispatch) => {\r\n    dispatch(SetPreloaderAC(true));\r\n    const profile = '/profile';\r\n    const userId = router.params.userId;\r\n    const authorizedUserId = userId;\r\n    if (!authorizedUserId) {\r\n      history.pushState({}, 'login');\r\n    }\r\n\r\n    !userId\r\n      ? profileApi.getUsersProfile(profile, '29840').then((response) => {\r\n          dispatch(SetProfileAC(response.data));\r\n          dispatch(SetPreloaderAC(false));\r\n        })\r\n      : profileApi.getUsersProfile(profile, userId).then((response) => {\r\n          dispatch(SetProfileAC(response.data));\r\n          dispatch(SetPreloaderAC(false));\r\n        });\r\n  };\r\n};\r\n\r\nexport const getProfileStatusTC = (router: any) => {\r\n  return (dispatch: IDispatch) => {\r\n    dispatch(SetPreloaderAC(true));\r\n    const profileStatus = '/profile/status';\r\n    const userId = router.params.userId;\r\n    !userId\r\n      ? profileApi\r\n          .getUsersProfileStatus(profileStatus, '29840')\r\n          .then((response) => {\r\n            dispatch(GetProfileStatusAC(response.data));\r\n            dispatch(SetPreloaderAC(false));\r\n          })\r\n      : profileApi\r\n          .getUsersProfileStatus(profileStatus, userId)\r\n          .then((response) => {\r\n            dispatch(GetProfileStatusAC(response.data));\r\n            dispatch(SetPreloaderAC(false));\r\n          });\r\n  };\r\n};\r\n\r\nexport const updateMyStatusTC = (message: string) => {\r\n  return (dispatch: any) => {\r\n    dispatch(SetPreloaderAC(true));\r\n    const profileStatus = '/profile/status';\r\n    profileApi\r\n      .updateMyProfileStatus(profileStatus, message)\r\n      .then((response) => {\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(UpdateMyStatusAC(message));\r\n          dispatch(SetPreloaderAC(false));\r\n        }\r\n      });\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"FormControl\":\"FormsControls_FormControl__aBk1v\",\"FormControlError\":\"FormsControls_FormControlError__qVc3I\"};","import React from 'react';\r\nimport styles from './FormsControls.module.scss';\r\n\r\nexport const FormControl = (props: any) => {\r\n  const hasError = props.meta.error && props.meta.touched;\r\n  return (\r\n    <div className={styles.FormControl}>\r\n      <div className={hasError ? styles.FormControlError : undefined}>\r\n        {props.children}\r\n      </div>\r\n      {hasError ? <span>{props.meta.error}</span> : undefined}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props: any) => {\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea\r\n        {...props.input}\r\n        placeholder={props.placeholder}></textarea>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props: any) => {\r\n  return (\r\n    <FormControl {...props}>\r\n      <input\r\n        {...props.input}\r\n        placeholder={props.placeholder}></input>\r\n    </FormControl>\r\n  );\r\n};\r\n","export const requiredField = (value: string) =>\r\n  value && value !== undefined ? undefined : 'Field is required';\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) =>\r\n  value && value.length > maxLength\r\n    ? `Field should be shorter then ${maxLength} symbols`\r\n    : undefined;\r\n"],"names":["_ref","message","name","_jsxs","className","classes","ProfileContainer","children","UserContainer","_jsx","src","ProfileLogo","alt","ProfileImg","ProfileName","ProfileText","counter","_useState","useState","_useState2","_slicedToArray","count","setCount","ProfileInfo","onClick","Number","LikeImg","required","requiredField","maxLength10","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","type","placeholder","component","Textarea","validate","Posts","React","postsData","addPost","posts","map","el","Post","id","AddTextAreaPostReduxForm","formData","newPostBody","displayName","Component","addPostHandler","status","updateMyStatusTC","editMode","setEditMode","_useState3","_useState4","statusChange","setStatusChange","useEffect","_Fragment","styles","ProfileInputContainer","onBlur","onChange","e","target","value","autoFocus","ProfileInput","onDoubleClick","ProfileStatusContainer","ProfileActualStatus","profilePage","currentProfile","fullName","ProfileStatusWithHooks","Preloader","isFetching","isAuth","authorizedUserId","CurrentProfile","PostsContainer","Navigate","to","ActiveRoutes","LOGIN","ProfileClassContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","getProfileTC","router","getProfileStatusTC","Profile","_objectSpread","AuthRedirectComponent","withAuthRedirect","WithUrlDataContainerComponent","location","useLocation","navigate","useNavigate","params","useParams","connect","state","newPostText","usersPage","auth","userId","AddPostAC","dispatch","SetPreloaderAC","profile","history","pushState","profileApi","getUsersProfile","then","response","SetProfileAC","data","profileStatus","getUsersProfileStatus","GetProfileStatusAC","updateMyProfileStatus","resultCode","UpdateMyStatusAC","FormControl","hasError","meta","error","touched","undefined","input","Input","maxLength","length","concat"],"sourceRoot":""}